.segment "BANK_17"
L_17_8000:	JMP L_17_8012
L_17_8003:	JMP L_17_9514
L_17_8006:	JMP L_17_8006
L_17_8009:	JMP L_17_950F
L_17_800C:	JMP L_17_9E0D
L_17_800F:	JMP L_17_9E47

L_17_8012:
; Set Stack Pointer
	LDX #$F1
	TXS
	LDX #$11 ; BANK18
	JSR bank_swap_A000
	JSR L_D28B
	JSR L_D10E
	JSR clear_sprites
	LDA #$01
	JSR switch_thread
	LDA #$00
	LDX #$06 ; BANK7
	JSR L_C390
	LDA #$04
	JSR switch_thread
@Loop1:
	LDA #$01
	JSR switch_thread
	LDA $38
	AND #$04
	BEQ @Loop2
	INC $06F6
@Loop2:
	LDA $3A
	AND #$F0
	BEQ @Loop1
@Loop3:
	JSR L_17_94E2
	LDA #$01
	LDX #$06 ; BANK7
	JSR L_C390
	LDA #$08
	JSR switch_thread
@Loop4:
	LDA #$01
	JSR switch_thread
	LDA $35
	CMP #$42
	BEQ @Loop5
	LDA $3A
	AND #$90
	BEQ @Loop4
	JSR L_17_94F4
	LDA #$57
	LDX #$06 ; BANK7
	JSR L_C390
	LDA #$78
	JSR switch_thread
	JSR L_17_94E2
	JMP L_17_8089
@Loop5:
	LDA #$1A ; BANK27
	LDY #<L_27_8000
	LDX #>L_27_8000
	JSR bank_swap_8000_jump
	JMP @Loop3

L_17_8089:
	LDY #<L_17_BB85
	LDX #>L_17_BB85
	JSR L_C481
; Set Sprite to 8x8
	LDA SOFT_PPUCTRL
	AND #%11011111
	STA SOFT_PPUCTRL
;
	LDA #$00
	STA ARROW_Y
	STA ARROW_X
L_17_809C:
	JSR L_D28B
	JSR L_D559
	JSR L_D10E
	JSR clear_sprites
	JSR L_17_9443
	LDA #$13
	LDX #$24
	JSR L_D1D5
L_17_80B2:
	LDY #<NORMAL_MENU_SELECT
	LDX #>NORMAL_MENU_SELECT
	LDA #$02
	JSR set_ymenu_arrow
@not_selected:
	LDA #$01
	JSR switch_thread
; Check for Arrow Movement
	JSR ymenu_up_down
	JSR ymenu_set_y
; Check for A Button
	LDA JOYPAD_PRESS
	BPL @not_selected
	JSR L_17_94F4
; Clear Arrow
	LDA #$F0
	STA $0200
; Go to Menu Selection
	LDA Y_MENU_OPTION
	ASL
	TAX
	LDA @Loop2+1,X
	PHA
	LDA @Loop2+0,X
	PHA
	RTS
@Loop2:	.WORD preseason_menu-1, season_menu-1, pro_bowl_menu-1, team_data_menu-1

preseason_menu:
; Set to Preseason Mode
	LDA GAME_TYPE
	AND #%11111100
	STA GAME_TYPE
	JSR L_17_9456
@Loop1:
	LDY #<PRESEASON_MENU_SELECT
	LDX #>PRESEASON_MENU_SELECT
	LDA #$02
	JSR set_ymenu_arrow
@not_selected:
	LDA #$01
	JSR switch_thread
; Check for Arrow Movement
	JSR ymenu_up_down
	JSR ymenu_set_y
; Check for A or B Button
	BIT JOYPAD_PRESS
	BVC @check_a
	JMP @previous
@check_a:
	BPL @not_selected
	JSR L_17_94F4
	JSR L_D28B
	LDA Y_MENU_OPTION
	ASL
	TAX
	LDA @options+1,X
	PHA
	LDA @options+0,X
	PHA
	RTS
@options:	.WORD @man_vs_com-1, @man_vs_man-1, @man_vs_coa-1, @coa_vs_com-1, @coa_vs_coa-1, @com_vs_com-1

@man_vs_com:
	LDA #$02
	STA PLAYER_TYPE
	JSR L_17_AB44
	JSR L_17_A9D2
	BCS @Loop6
	JSR L_17_AA16
	BCS @Loop6
	JMP L_17_9278
@Loop6:
	LDA #$00
	STA Y_MENU_OPTION
	JMP @Loop18

@man_vs_man:
	LDA #$00
	STA PLAYER_TYPE
	JSR L_17_AB44
	JSR L_17_AA7D
	BCS @Loop8
	JMP L_17_9278
@Loop8:
	LDA #$01
	STA Y_MENU_OPTION
	JMP @Loop18

@coa_vs_com:
	LDA #$12
	STA PLAYER_TYPE
	JSR L_17_AB44
	JSR L_17_A9D2
	BCS @Loop10
	JSR L_17_AA16
	BCS @Loop10
	JMP L_17_9278
@Loop10:
	LDA #$03
	STA Y_MENU_OPTION
	JMP @Loop18

@coa_vs_coa:
	LDA #$11
	STA PLAYER_TYPE
	JSR L_17_AB44
	JSR L_17_AA7D
	BCS @Loop12
	JMP L_17_9278
@Loop12:
	LDA #$04
	STA Y_MENU_OPTION
	JMP @Loop18

@man_vs_coa:
	LDA #$01
	STA PLAYER_TYPE
	JSR L_17_AB44
	JSR L_17_A9D2
	BCS @Loop14
	JSR L_17_AA16
	BCS @Loop14
	JMP L_17_9278
@Loop14:
	LDA #$02
	STA Y_MENU_OPTION
	JMP @Loop18

@com_vs_com:
	LDA #$22
	STA PLAYER_TYPE
	JSR L_17_AB44
	JSR L_17_A9D2
	BCS @Loop16
	JSR L_17_AA16
	BCS @Loop16
	JMP L_17_9278
@Loop16:
	LDA #$05
	STA Y_MENU_OPTION
	JMP @Loop18

@previous:
	LDA #$F0
	STA $0200
	LDY #$45
	LDX #$25
	LDA #$03
	STA $3E
	LDA #$60
	STA $3F
	JSR L_CCFC
	LDA #$00
	STA Y_MENU_OPTION
	JMP L_17_80B2

@Loop18:
	JSR L_D28B
	JSR L_D10E
	JSR clear_sprites
	JSR L_17_9443
	JSR L_17_9456
	LDA #$13
	LDX #$24
	JSR L_D1D5
	JMP @Loop1

season_menu:
; Set to Season Mode
	LDA GAME_TYPE
	AND #%11111100
	ORA #%00000010
	STA GAME_TYPE
	LDA #$00
	STA Y_MENU_OPTION
	JSR L_17_86EA
L_17_8207:
	LDY #<SEASON_MENU_SELECT
	LDX #>SEASON_MENU_SELECT
	LDA #$02
	JSR set_ymenu_arrow
@not_selected:
	LDA #$01
	JSR switch_thread
; Check for Arrow Movement
	JSR ymenu_up_down
	JSR ymenu_set_y
; Check for A or B Button
	BIT JOYPAD_PRESS
	BVC @check_a
	JMP L_17_86D9
@check_a:
	BPL @not_selected
	JSR L_17_94F4
	LDA Y_MENU_OPTION
	ASL
	TAX
	LDA @options+1,X
	PHA
	LDA @options+0,X
	PHA
	RTS
@options:	.WORD L_17_8242-1, L_17_828F-1, L_17_9294-1, L_17_8507-1, L_17_85E0-1, L_17_8674-1, L_17_86C7-1

L_17_8242:
	JSR L_D28B
	LDA #$04
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDY #<MINI_HELMETS_TEAM_CONTROL
	LDX #>MINI_HELMETS_TEAM_CONTROL
	JSR L_17_A83D
	LDA #$19 ; BANK26
	LDY #<L_26_801E
	LDX #>L_26_801E
	JSR bank_swap_8000_jump
	JSR L_17_94F4
	LDA #$00
	STA Y_MENU_OPTION
	STA X_MENU_OPTION
L_17_8265:
	JSR L_17_8272
	LDA #$13
	LDX #$24
	JSR L_D1D5
	JMP L_17_8207

L_17_8272:
	JSR L_D28B
	JSR L_D10E
	JSR clear_sprites
	LDA #$00
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDA #$03
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDA #$20
	JSR L_17_ACEF
	RTS

L_17_828F:
	LDA $6758
	CMP #$11
	BCC @Loop1
	JMP @Loop23
@Loop1:
	JSR L_D28B
	LDA #$05
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDA #$5A
	STA $8E
	LDA #$67
	STA $8F
	LDA $6758
	AND #$FC
	STA $90
	STA $96
	LDA #$19 ; BANK26
	LDY #<L_26_8000
	LDX #>L_26_8000
	JSR bank_swap_8000_jump
	LDA #$15
	LDX #$25
	JSR L_D1D5
@Loop2:
	LDA #$01
	JSR switch_thread
	LDA #$19 ; BANK26
	LDY #<L_26_8003
	LDX #>L_26_8003
	JSR bank_swap_8000_jump
	BIT JOYPAD_PRESS
	BVS L_17_8265
	BMI @Loop5
	LDA JOYPAD_PRESS
	AND #%00001100
	BEQ @Loop2
	AND #%00001000
	BEQ @Loop3
	LDA $96
	SEC
	SBC #$04
	BCC @Loop2
	JMP @Loop4
@Loop3:
	LDA $96
	CLC
	ADC #$04
	CMP #$12
	BCS @Loop2
@Loop4:
	STA $96
	LDA $96
	STA $90
	LDA #$19 ; BANK26
	LDY #<L_26_8000
	LDX #>L_26_8000
	JSR bank_swap_8000_jump
	JMP @Loop2
@Loop5:
	LDA #$00
	STA $30
	LDA #$19 ; BANK26
	LDY #<L_26_8003
	LDX #>L_26_8003
	JSR bank_swap_8000_jump
	JSR L_17_84DD
	LDA #$82
	STA $3E
	LDA #$20
	STA $3F
	LDA #$03
	STA $40
	LDA #$60
	STA $41
	LDX #$0D
	LDY #$09
	JSR L_17_94D4
	LDA #$06
	LDX #$0F ; BANK16
	JSR L_C3A2
@Loop6:
	LDY #<SCHEDULE_MENU_SELECT
	LDX #>SCHEDULE_MENU_SELECT
	LDA #$02
	JSR set_ymenu_arrow
@Loop7:
	LDA #$01
	JSR switch_thread
	JSR ymenu_up_down
	JSR ymenu_set_y
	BIT JOYPAD_PRESS
	BVC @Loop8
	JMP @Loop26
@Loop8:
	BPL @Loop7
	LDA Y_MENU_OPTION
	CMP #$02
	BNE @Loop9
	JMP @Loop17
@Loop9:
	CMP #$01
	BNE @Loop10
	JMP @Loop23
@Loop10:
	JSR L_17_84DD
	LDA #$C3
	STA $3E
	LDA #$20
	STA $3F
	LDA #$03
	STA $40
	LDA #$61
	STA $41
	LDX #$0D
	LDY #$05
	JSR L_17_94D4
	LDA #$09
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDX $6758
	CPX #$11
	BCS @Loop16
	INX
	CPX $669A
	BCS @Loop11
	LDX $669A
@Loop11:
	STX $E1
	LDA #$12
	STA $E3
	LDA #$84
	STA $E4
	JMP @Loop13
@Loop12:
	LDA #$01
	JSR switch_thread
	JSR ymenu_up_down
	LDA $37
	AND #$0C
	BNE @Loop13
	LDA $30
	AND #$04
	BEQ @Loop14
@Loop13:
	LDA $E1
	JSR L_D8B7
	LDY #$0D
	LDX #$21
	JSR L_D5B5
	JMP @Loop15
@Loop14:
	LDY #$0D
	LDX #$21
	LDA #$01
	STA $3F
	LDA #$02
	STA $3E
	JSR L_D09B
@Loop15:
	BIT $3A
	BVS @Loop16
	BPL @Loop12
	LDA #$16
	JSR L_C41F
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA $E1
	STA $669A
	LDA #$C0
	STA PRG_RAM_PROTECT
	LDA $E1
	JSR L_D8B7
	LDY #$0D
	LDX #$21
	JSR L_D5B5
	LDA #$1E
	JSR switch_thread
@Loop16:
	JSR L_17_84DD
	LDY #$C3
	LDX #$20
	LDA #$03
	STA $3E
	LDA #$61
	STA $3F
	JSR L_CCFC
	JMP @Loop6
	.BYTE $12
@Loop17:
	JSR L_17_84DD
	LDA #$43
	STA $3E
	LDA #$21
	STA $3F
	LDA #$A3
	STA $40
	LDA #$60
	STA $41
	LDX #$1C
	LDY #$0B
	JSR L_17_94D4
	LDA #$07
	LDX #$0F ; BANK16
	JSR L_C3A2
@Loop18:
	LDY #<SCHEDULE_RESET_MENU_SELECT
	LDX #>SCHEDULE_RESET_MENU_SELECT
	LDA #$02
	JSR set_ymenu_arrow
@Loop19:
	LDA #$01
	JSR switch_thread
	JSR ymenu_up_down
	JSR ymenu_set_y
	BIT $3A
	BVC @Loop20
	JMP @Loop25
@Loop20:
	BPL @Loop19
	LDA $E1
	BNE @Loop21
	JMP @Loop25
@Loop21:
	JSR L_17_84DD
	LDA #$4D
	STA $3E
	LDA #$22
	STA $3F
	LDA #$03
	STA $40
	LDA #$62
	STA $41
	LDX #$1C
	LDY #$0B
	JSR L_17_94D4
	LDA #$08
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDY #<SCHEDULE_RESET_VERIFY_SELECT
	LDX #>SCHEDULE_RESET_VERIFY_SELECT
	LDA #$02
	JSR set_ymenu_arrow
@Loop22:
	LDA #$01
	JSR switch_thread
	JSR ymenu_up_down
	JSR ymenu_set_y
	BIT $3A
	BVS @Loop24
	BPL @Loop22
	LDA $E1
	BEQ @Loop24
	LDA #$19 ; BANK26
	LDY #<L_26_800C
	LDX #>L_26_800C
	JSR bank_swap_8000_jump
	LDA #$19 ; BANK26
	LDY #<L_26_8006
	LDX #>L_26_8006
	JSR bank_swap_8000_jump
	JMP L_17_828F
@Loop23:
	JSR L_17_B34C
	JMP @Loop1
@Loop24:
	JSR L_17_84DD
	JSR L_17_84F7
	JMP @Loop18
@Loop25:
	LDA #$02
	JSR L_17_84DF
	JSR L_17_84E7
	JMP @Loop6
@Loop26:
	LDA #$01
	JSR L_17_84DF
	LDY #$82
	LDX #$20
	LDA #$03
	STA $3E
	LDA #$60
	STA $3F
	JSR L_CCFC
	JMP @Loop2

L_17_84DD:
	LDA #$00
L_17_84DF:
	STA $E1
	LDA #$F0
	STA $0200
	RTS

L_17_84E7:
	LDY #$43
	LDX #$21
	LDA #$A3
	STA $3E
	LDA #$60
	STA $3F
	JSR L_CCFC
	RTS

L_17_84F7:
	LDY #$4D
	LDX #$22
	LDA #$03
	STA $3E
	LDA #$62
	STA $3F
	JSR L_CCFC
	RTS

L_17_8507:
	LDA #$F0
	STA $0200
	LDA #$00
	STA $3E
	LDA #$24
	STA $3F
	LDA #$03
	STA $40
	LDA #$61
	STA $41
	LDX #$20
	LDY #$0C
	JSR L_17_94D4
	LDA #$0A
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDA #$01
	JSR L_17_8768
	LDA #$00
	STA $E1
	STA $E2
@Loop1:
	LDY #<STANDINGS_MENU_SELECT
	LDX #>STANDINGS_MENU_SELECT
	LDA #$02
	JSR set_xymenu_arrow
@Loop2:
	LDA #$01
	JSR switch_thread
	JSR xymenu_move
	JSR xymenu_set_xy
	BIT $3A
	BVC @Loop3
	JMP @Loop7
@Loop3:
	BPL @Loop2
	JSR L_17_94F4
	LDA $E1
	STA $EB
	LDA $E2
	STA $EC
	LDA $E1
	CMP #$02
	BEQ @Loop5
	JSR L_17_AF18
@Loop4:
	LDA #$01
	JSR switch_thread
	LDA $3A
	AND #$C0
	BEQ @Loop4
	JMP @Loop6
@Loop5:
	JSR L_17_B34C
@Loop6:
	LDA #$00
	STA $E2
	JSR L_17_8272
	LDA #$0A
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDA #$60
	STA $57
	LDA #$00
	STA $58
	LDA $EB
	STA $E1
	LDA $EC
	STA $E2
	LDA #$01
	JSR switch_thread
	LDA #$13
	LDX #$24
	JSR L_D1D5
	JMP @Loop1
@Loop7:
	LDA #$F0
	STA $0200
	LDA #$00
	JSR L_17_8768
	JSR L_D559
	LDY #$00
	LDX #$24
	LDA #$03
	STA $3E
	LDA #$61
	STA $3F
	JSR L_CCFC
	LDY #$C2
	LDX #$27
	LDA #<@Loop8
	STA $3E
	LDA #>@Loop8
	STA $3F
	JSR L_CCFC
	LDA #$03
	STA $E1
	JMP L_17_8207
@Loop8:
	.BYTE $08
	.BYTE $50
	.BYTE $50
	.BYTE $10
	.BYTE $00
	.BYTE $00
	.BYTE $00
	.BYTE $00
	.BYTE $00
	.BYTE $FF

L_17_85E0:
	LDA #$F0
	STA $0200
	LDA #$4D
	STA $3E
	LDA #$22
	STA $3F
	LDA #$03
	STA $40
	LDA #$61
	STA $41
	LDX #$11
	LDY #$0A
	JSR L_17_94D4
	LDA #$0C
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDA #$00
	STA $E1
	STA $E2
@Loop1:
	LDY #<RANKINGS_MENU_SELECT
	LDX #>RANKINGS_MENU_SELECT
	LDA #$02
	JSR set_xymenu_arrow
@Loop2:
	LDA #$01
	JSR switch_thread
	JSR xymenu_move
	JSR xymenu_set_xy
	BIT $3A
	BVS @Loop3
	BPL @Loop2
	LDA $E1
	STA $EB
	LDA $E2
	STA $EC
	JSR L_17_B573
	JSR L_17_8272
	LDA #$0C
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDA $EB
	STA $E1
	LDA $EC
	STA $E2
	LDA #$13
	LDX #$24
	JSR L_D1D5
	JMP @Loop1
@Loop3:
	LDA #$F0
	STA $0200
	LDY #$EB
	LDX #$23
	LDA #$01
	STA $3F
	LDA #$0B
	STA $3E
	JSR L_D09B
	LDY #$4D
	LDX #$22
	LDA #$03
	STA $3E
	LDA #$61
	STA $3F
	JSR L_CCFC
	LDA #$04
	STA $E1
	JMP L_17_8207

L_17_8674:
	LDA #$00
	STA $E1
	STA $E2
@Loop1:
	LDA #$00
	LDX #$07 ; BANK8
	JSR L_C3A2
	LDA #$0F
	STA $4B
	LDY #<LEADERS_MENU_SELECT
	LDX #>LEADERS_MENU_SELECT
	LDA #$02
	JSR set_xymenu_arrow
@Loop2:
	LDA #$01
	JSR switch_thread
	JSR xymenu_move
	JSR xymenu_set_xy
	BIT $3A
	BVS @Loop3
	BPL @Loop2
	LDA $E1
	STA $EB
	LDA $E2
	STA $EC
	LDA #$18 ; BANK25
	LDY #<L_25_8000
	LDX #>L_25_8000
	JSR bank_swap_8000_jump
	LDX #$11 ; BANK18
	JSR bank_swap_A000
	LDA $EB
	STA $E1
	LDA $EC
	STA $E2
	JMP @Loop1
@Loop3:
	LDA #$05
	STA $E1
	JMP L_17_8265

L_17_86C7:
	JSR L_17_88AF
; Set to Season Mode
	LDA GAME_TYPE
	AND #%11111100
	ORA #%00000010
	STA GAME_TYPE
	LDA #$06
	STA Y_MENU_OPTION
	JMP L_17_8265

L_17_86D9:
	LDA #$F0
	STA $0200
	LDA #$01
	JSR L_17_86EA
	LDA #$01
	STA $E1
	JMP L_17_80B2

L_17_86EA:
	TAX
	ASL
	ASL
	STA $3F
	LDA L_17_8766,X
	STA $41
	LDA #$00
	STA $40
	LDY #$FC
@Loop1:
	LDA $020B,Y
	STA $0210,Y
	INY
	BNE @Loop1
	LDA #$38
	STA $030B
	LDA #$00
	STA $0310
	LDA #$20
	STA $3E
@Loop2:
	LDA #$01
	JSR switch_thread
	LDX $3F
	LDA $0307
	SEC
	SBC L_17_875E,X
	STA $0307
	LDA $0308
	SBC L_17_875F,X
	AND #$01
	STA $0308
	LDA $030C
	CLC
	ADC L_17_875E,X
	STA $030C
	LDA $030D
	ADC L_17_875F,X
	AND #$01
	STA $030D
	LDA $40
	CLC
	ADC L_17_8760,X
	STA $40
	LDA $41
	ADC L_17_8761,X
	STA $41
	JSR L_17_ACEF
	DEC $3E
	BNE @Loop2
	LDA #$00
	STA $030B
	RTS

L_17_875E:	.BYTE $08
L_17_875F:	.BYTE $00
L_17_8760:	.BYTE $80
L_17_8761:	.BYTE $FB
	.BYTE $F8
	.BYTE $FF
	.BYTE $80
	.BYTE $04
L_17_8766:	.BYTE $B0
	.BYTE $20

L_17_8768:
	ASL
	ASL
	ASL
	SEC
	SBC #$04
	STA $3F
	LDA #$18
	STA $3E
@Loop1:
	LDA #$01
	JSR switch_thread
	LDA $3F
	JSR L_17_8783
	DEC $3E
	BNE @Loop1
	RTS

L_17_8783:
	TAY
	BMI @Loop2
	CLC
	ADC $57
	CMP #$F0
	BCC @Loop1
	ADC #$0F
	INC $58
@Loop1:
	STA $57
	RTS
@Loop2:
	CLC
	ADC $57
	CMP #$F0
	BCC @Loop3
	SBC #$10
	DEC $58
@Loop3:
	STA $57
	RTS

pro_bowl_menu:
; Set to Pro Bowl Mode
	LDA GAME_TYPE
	AND #%11111100
	ORA #%00000001
	STA GAME_TYPE
	JSR L_17_9474
	LDA #$00
	STA Y_MENU_OPTION
@Loop1:
	LDY #<PRO_BOWL_MENU_SELECT
	LDX #>PRO_BOWL_MENU_SELECT
	LDA #$02
	JSR set_ymenu_arrow
@not_selected:
	LDA #$01
	JSR switch_thread
; Check for Arrow Movement
	JSR ymenu_up_down
	JSR ymenu_set_y
; Check for A or B Button
	BIT JOYPAD_PRESS
	BVC @check_a
	JMP @previous
@check_a:
	BPL @not_selected
	JSR L_17_94F4
	JSR L_D28B
	LDA Y_MENU_OPTION
	ASL
	TAX
	LDA @options+1,X
	PHA
	LDA @options+0,X
	PHA
	RTS
@options:	.WORD @man_vs_com-1, @man_vs_man-1, @man_vs_coa-1, @coa_vs_com-1, @coa_vs_coa-1, @com_vs_com-1

@man_vs_com:
	LDA #$02
	STA PLAYER_TYPE
	JSR L_17_ABF7
	JSR L_17_AB5E
	BCS @Loop6
	JMP L_17_9404
@Loop6:
	LDA #$00
	STA Y_MENU_OPTION
	JMP @Loop18

@man_vs_man:
	LDA #$00
	STA PLAYER_TYPE
	JSR L_17_ABF7
	JSR L_17_AB5E
	BCS @Loop8
	JMP L_17_9404
@Loop8:
	LDA #$01
	STA Y_MENU_OPTION
	JMP @Loop18

@coa_vs_com:
	LDA #$12
	STA PLAYER_TYPE
	JSR L_17_ABF7
	JSR L_17_AB5E
	BCS @Loop10
	JMP L_17_9404
@Loop10:
	LDA #$03
	STA Y_MENU_OPTION
	JMP @Loop18

@coa_vs_coa:
	LDA #$11
	STA PLAYER_TYPE
	JSR L_17_ABF7
	JSR L_17_AB5E
	BCS @Loop12
	JMP L_17_9404
@Loop12:
	LDA #$04
	STA Y_MENU_OPTION
	JMP @Loop18

@man_vs_coa:
	LDA #$01
	STA PLAYER_TYPE
	JSR L_17_ABF7
	JSR L_17_AB5E
	BCS @Loop14
	JMP L_17_9404
@Loop14:
	LDA #$02
	STA Y_MENU_OPTION
	JMP @Loop18

@com_vs_com:
	LDA #$22
	STA PLAYER_TYPE
	JSR L_17_ABF7
	JSR L_17_AB5E
	BCS @Loop16
	JMP L_17_9404
@Loop16:
	LDA #$05
	STA Y_MENU_OPTION
	JMP @Loop18

@previous:
	LDA #$F0
	STA $0200
	LDY #$C5
	LDX #$25
	LDA #$03
	STA $3E
	LDA #$60
	STA $3F
	JSR L_CCFC
	LDA #$02
	STA Y_MENU_OPTION
	JMP L_17_80B2

@Loop18:
	JSR L_D28B
	JSR L_D10E
	JSR clear_sprites
	JSR L_17_9443
	JSR L_17_9474
	LDA #$13
	LDX #$24
	JSR L_D1D5
	JMP @Loop1

team_data_menu:
	JSR L_17_88AF
	LDA #$03
	STA Y_MENU_OPTION
	JMP L_17_809C

L_17_88AF:
	LDA #$00
	STA Y_MENU_OPTION
	STA X_MENU_OPTION
@Loop1:
	LDA #$19
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDY #<MINI_HELMETS_TEAM_DATA
	LDX #>MINI_HELMETS_TEAM_DATA
	JSR L_17_A83D
	LDA #$14
	LDX #$23
	JSR L_D1D5
	LDY #<TEAM_DATA_ARROW
	LDX #>TEAM_DATA_ARROW
	LDA #$02
	JSR set_xymenu_arrow
@not_selected:
	LDA #$01
	JSR switch_thread
; Check for Arrow Movement
	JSR xymenu_move
	JSR xymenu_set_xy
; Check for A or B Button
	BIT JOYPAD_PRESS
	BVC @check_a
	JMP @Loop73
@check_a:
	BPL @not_selected
	LDA Y_MENU_OPTION
	STA $EB
	LDA X_MENU_OPTION
	STA $EC
	JSR xymenu_get_spot
	SEC
	SBC #$06
	CMP #$1E
	BCC @Loop4
	JMP @Loop30
@Loop4:
	JSR L_17_AC21
	STA $6E
	STA $6C
	CLC
	ADC #$01
	CMP #$1C
	BCC @Loop5
	LDA #$00
@Loop5:
	STA $6D
	JSR L_17_9D69
	JSR L_17_9CAA
	LDA #$00
	STA $70
	STA $E2
	STA $E1
@Loop6:
	JSR L_17_8FAC
@Loop7:
	LDY #<TEAM_MENU_SELECT
	LDX #>TEAM_MENU_SELECT
	LDA #$02
	JSR set_ymenu_arrow
@Loop8:
	LDA #$01
	JSR switch_thread
	JSR ymenu_up_down
	JSR ymenu_set_y
	BIT JOYPAD_PRESS
	BVC @Loop9
	JMP @Loop11
@Loop9:
	BPL @Loop8
	JSR L_17_94F4
	LDA Y_MENU_OPTION
	ASL
	TAX
	LDA @Loop10+1,X
	PHA
	LDA @Loop10+0,X
	PHA
	RTS
@Loop10:	.WORD @Loop12-1, @Loop27-1, @Loop28-1, @Loop29-1
@Loop11:
	LDA #$00
	STA $030B
	LDA $EB
	STA $E1
	LDA $EC
	STA $E2
	JMP @Loop1
@Loop12:
	LDY #$FC
@Loop13:
	LDA L_17_BFB0-$FC,Y
	STA $0108,Y
	INY
	BNE @Loop13
@Loop14:
	LDA #$00
	STA $E1
@Loop15:
	LDA $E2
	CMP #$01
	BNE @Loop16
	LDY #<TEAM_PLAYER_SELECT2
	LDX #>TEAM_PLAYER_SELECT2
	LDA #$02
	JSR set_ymenu_arrow
	JMP @Loop17
@Loop16:
	LDY #<TEAM_PLAYER_SELECT1
	LDX #>TEAM_PLAYER_SELECT1
	LDA #$02
	JSR set_ymenu_arrow
@Loop17:
	LDA #$01
	JSR switch_thread
	JSR ymenu_up_down
	JSR ymenu_set_y
	BIT JOYPAD_PRESS
	BVS @Loop21
	BMI @Loop22
	LDA JOYPAD_PRESS
	LSR
	BCS @Loop19
	LSR
	BCC @Loop17
	LDA #$F0
	STA $0200
	DEC $E2
	LDA $E2
	BPL @Loop18
	LDA #$02
	STA $E2
@Loop18:
	LDA #$01
	JSR switch_thread
	LDA $030C
	SEC
	SBC #$08
	STA $030C
	LDA $030D
	SBC #$00
	AND #$01
	STA $030D
	LDX $E2
	LDA L_17_BFAA,X
	CMP $030C
	BNE @Loop18
	JMP @Loop14
@Loop19:
	LDA #$F0
	STA $0200
	INC $E2
	LDA $E2
	CMP #$03
	BCC @Loop20
	LDA #$00
	STA $E2
@Loop20:
	LDA #$01
	JSR switch_thread
	LDA $030C
	CLC
	ADC #$08
	STA $030C
	LDA $030D
	ADC #$00
	AND #$01
	STA $030D
	LDX $E2
	LDA L_17_BFAA,X
	CMP $030C
	BNE @Loop20
	JMP @Loop14
@Loop21:
	LDA #$00
	STA $E1
	LDA #$F0
	STA $0204
	JMP @Loop7
@Loop22:
	LDA #$00
	STA $030B
	LDA $E1
	LDX $E2
	BEQ @Loop25
	CPX #$01
	BNE @Loop24
	CMP #$06
	BCS @Loop23
	CLC
	ADC #$0B
	JMP @Loop25
@Loop23:
	CLC
	ADC #$16
	JMP @Loop25
@Loop24:
	CLC
	ADC #$11
@Loop25:
	STA $43
	LDA #$18 ; BANK25
	LDY #<L_25_8003
	LDX #>L_25_8003
	JSR bank_swap_8000_jump
	LDX #$11 ; BANK18
	JSR bank_swap_A000
	JSR L_17_8FAC
	LDY #$FC
@Loop26:
	LDA L_17_BFB0-$FC,Y
	STA $0108,Y
	INY
	BNE @Loop26
	JMP @Loop15
@Loop27:
	LDA #$00
	STA $6F
	LDA #$00
	JSR L_17_962A
	JSR L_17_9DBA
	LDA #$01
	STA $E1
	LDA #$00
	STA $E2
	JMP @Loop6
@Loop28:
	LDA #$19 ; BANK26
	LDY #<L_26_801B
	LDX #>L_26_801B
	JSR bank_swap_8000_jump
	JMP @Loop6
@Loop29:
	JSR L_17_8FD0
	JSR L_17_9DBA
	LDA #$03
	STA $E1
	LDA #$00
	STA $E2
	JMP @Loop6
@Loop30:
	LDA #$00
	STA $70
	LDA $2D
	AND #$FC
	ORA #$01
	STA $2D
	LDA $E1
	CLC
	ADC #$1C
	STA $6E
	STA $6C
	JSR L_17_8ED5
	LDA #$00
	STA $E1
	STA $E2
@Loop31:
	JSR L_17_8D62
@Loop32:
	LDY #<PRO_BOWL_TEAM_MENU_SELECT
	LDX #>PRO_BOWL_TEAM_MENU_SELECT
	LDA #$02
	JSR set_xymenu_arrow
@Loop33:
	LDA #$01
	JSR switch_thread
	JSR xymenu_move
	JSR xymenu_set_xy
	BIT JOYPAD_PRESS
	BVC @Loop34
	JMP @Loop72
@Loop34:
	BPL @Loop33
	JSR xymenu_get_spot
	ASL
	TAX
	LDA @Loop35+1,X
	PHA
	LDA @Loop35+0,X
	PHA
	RTS
@Loop35:	.WORD @Loop36-1, @Loop39-1, @Loop46-1, @Loop45-1, @Loop40-1, @Loop65-1
@Loop36:
	LDY #$FC
@Loop37:
	LDA PRO_BOWL_PLAYER_DATA_LEFTOVER_ARROW-$FC,Y
	STA $0108,Y
	INY
	BNE @Loop37
	JSR L_17_8D7C
	BCS @Loop38
	LDA $6E
	STA $AD
	JSR L_17_8F88
	LDA $66D0,X
	STA $6E
	LDA $66D1,X
	STA $43
	LDA #$18 ; BANK25
	LDY #<L_25_8003
	LDX #>L_25_8003
	JSR bank_swap_8000_jump
	LDX #$11 ; BANK18
	JSR bank_swap_A000
	LDA $AD
	STA $6E
	JSR L_17_8D62
	JMP @Loop36
@Loop38:
	LDA #$00
	STA $E1
	STA $E2
	LDA #$F0
	STA $0204
	JMP @Loop32
@Loop39:
	JSR L_17_8ED5
	LDA #$00
	STA $6F
	LDA #$00
	JSR L_17_962A
	LDA #$00
	STA $E1
	LDA #$01
	STA $E2
	JMP @Loop31
@Loop40:
	LDA #<PRO_BOWL_RESET_WORDS
	STA $3E
	LDA #>PRO_BOWL_RESET_WORDS
	STA $3F
	LDY #$E7
	LDX #$20
	JSR L_CCFC
	LDA #$00
	STA $E1
	STA $E2
	LDY #<PRO_BOWL_RESET_SELECT
	LDX #>PRO_BOWL_RESET_SELECT
	LDA #$02
	JSR set_xymenu_arrow
@Loop41:
	LDA #$01
	JSR switch_thread
	JSR xymenu_move
	JSR xymenu_set_xy
	BIT JOYPAD_PRESS
	BVS @Loop44
	BPL @Loop41
	LDA $E2
	BEQ @Loop44
	LDA $6E
	CMP #$1D
	BCS @Loop42
	LDA #$19 ; BANK26
	LDY #<L_26_8012
	LDX #>L_26_8012
	JSR bank_swap_8000_jump
	JMP @Loop43
@Loop42:
	LDA #$19 ; BANK26
	LDY #<L_26_8015
	LDX #>L_26_8015
	JSR bank_swap_8000_jump
@Loop43:
	LDA #$00
	STA $E2
	JMP @Loop31
@Loop44:
	LDY #$E7
	LDX #$20
	LDA #$01
	STA $3F
	LDA #$08
	STA $3E
	JSR L_D09B
	JMP @Loop32
@Loop45:
	JSR L_17_8ED5
	LDA #$19 ; BANK26
	LDY #<L_26_801B
	LDX #>L_26_801B
	JSR bank_swap_8000_jump
	JMP @Loop31
@Loop46:
	LDA #$00
	STA $E1
	STA $A0
	LDY #$FC
@Loop47:
	LDA PRO_BOWL_CHANGE_PLAYERS_LEFTOVER_ARROW-$FC,Y
	STA $0108,Y
	INY
	BNE @Loop47
@Loop48:
	JSR L_17_8D7C
	BCC @Loop49
	JMP @Loop63
@Loop49:
	LDA $E1
	STA $E7
	LDA $E2
	STA $E8
	LDY #$FC
@Loop50:
	LDA $0104,Y
	STA $0108,Y
	INY
	BNE @Loop50
	LDY #$40
	LDX #$20
	LDA #$06
	STA $3F
	LDA #$20
	STA $3E
	JSR L_D09B
	JSR L_17_8F88
	STY $43
	LDA #$58
	STA $3E
	LDA #$20
	STA $3F
	LDA #$18 ; BANK25
	LDY #<L_25_8006
	LDX #>L_25_8006
	JSR bank_swap_8000_jump
	JSR xymenu_get_spot
	ASL
	TAX
	LDA L_17_9536,X
	STA $9E
	LDA L_17_9536+1,X
	STA $9F
@Loop51:
	JSR L_17_8D9A
	LDA $B8
	LSR
	LSR
	CMP $9F
	BCS @Loop55
	LDX #$FE
@Loop52:
	INX
	INX
	LDA $A7,X
	BMI @Loop52
	TXA
	LSR
	STA $E1
	LDA $9F
	ASL
	TAX
	LDY L_17_957A-2,X
	LDA L_17_957A-1,X
	TAX
	LDA #$02
	JSR set_ymenu_arrow
@Loop53:
	LDA #$01
	JSR switch_thread
@Loop54:
	JSR ymenu_up_down
	LDA $E1
	ASL
	TAX
	LDA $A7,X
	BMI @Loop54
	JSR ymenu_set_y
	JSR @Loop57
	BCS @Loop51
	LDA $3A
	BPL @Loop53
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA $E7
	LDX $E8
	JSR L_17_8F8C
	LDA $E1
	ASL
	TAY
	LDA $00A6,Y
	STA $66D0,X
	LDA $00A7,Y
	STA $66D1,X
	JSR store_sram_checksum
	LDA #$C0
	STA PRG_RAM_PROTECT
	JSR L_17_8E6B
	JMP @Loop51
@Loop55:
	LDA #$F0
	STA $0200
@Loop56:
	LDA #$01
	JSR switch_thread
	JSR @Loop57
	BCC @Loop56
	JMP @Loop51
@Loop57:
	BIT JOYPAD_PRESS
	BVS @Loop62
	LDA JOYPAD_PRESS
	LSR
	BCS @Loop59
	LSR
	BCC @Loop61
	DEC $A0
	BPL @Loop58
	LDA #$0D
	STA $A0
@Loop58:
	SEC
	RTS
@Loop59:
	INC $A0
	LDA $A0
	CMP #$0E
	BCC @Loop60
	LDA #$00
	STA $A0
@Loop60:
	SEC
@Loop61:
	RTS
@Loop62:
	PLA
	PLA
	LDA #$F0
	STA $0204
	LDA $E7
	STA $E1
	LDA $E8
	STA $E2
	JMP @Loop48
@Loop63:
	LDA #$F0
	STA $0204
	LDA #$F0
	LDY #$F0
@Loop64:
	STA $0120,Y
	INY
	BNE @Loop64
	LDA #$01
	STA $E1
	LDA #$00
	STA $E2
	LDA #$22
	LDX #$0F ; BANK16
	JSR L_C3A2
	JMP @Loop32
@Loop65:
	JSR L_17_8FD0
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA $6E
	CMP #$1D
	BCS @Loop68
	LDY #$F8
@Loop66:
	LDA $6586,Y
	STA $6650,Y
	INY
	BNE @Loop66
	LDY #$F8
@Loop67:
	LDA $658E,Y
	STA $6658,Y
	INY
	BNE @Loop67
	JMP @Loop71
@Loop68:
	LDY #$F8
@Loop69:
	LDA $658E,Y
	STA $6650,Y
	INY
	BNE @Loop69
	LDY #$F8
@Loop70:
	LDA $6586,Y
	STA $6658,Y
	INY
	BNE @Loop70
@Loop71:
	JSR store_sram_checksum
	LDA #$C0
	STA PRG_RAM_PROTECT
	LDA #$02
	STA $E1
	LDA #$01
	STA $E2
	JMP @Loop31
@Loop72:
	LDA $EB
	STA $E1
	LDA $EC
	STA $E2
	LDA #$00
	STA $030B
	STA $E2
	LDA $2D
	AND #$FC
	STA $2D
	JMP @Loop1
@Loop73:
	JSR L_D28B
	RTS

L_17_8D62:
	LDA $6E
	STA $6C
	LDA #$21
	LDX #$0F ; BANK16
	JSR L_C3A2
	JSR L_17_8E6B
	LDA #$0F
	STA $4B
	LDA #$30
	LDX #$30
	JSR L_D1D5
	RTS

L_17_8D7C:
	LDY #<PRO_BOWL_PLAYER_SELECT
	LDX #>PRO_BOWL_PLAYER_SELECT
	LDA #$02
	JSR set_xymenu_arrow
@Loop1:
	LDA #$01
	JSR switch_thread
	JSR xymenu_move
	JSR xymenu_set_xy
	BIT JOYPAD_PRESS
	BVS @Loop2
	BPL @Loop1
	CLC
	RTS
@Loop2:
	SEC
	RTS

L_17_8D9A:
	LDA $6E
	STA $6F
	JSR L_17_8F7C
	STA $6E
	LDA #$23
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDA #$81
	STA $90
	LDA #$20
	STA $91
	LDA #$00
	STA $B8
	LDA #$F0
	LDY #$F0
@Loop1:
	STA $0120,Y
	INY
	BNE @Loop1
	LDA $9E
	STA $92
	LDA $9F
	STA $93
	LDA #$00
	STA $94
@Loop2:
	JSR L_17_8F7C
	LDX $94
	STA $A6,X
	STA $45
	LDA $92
	STA $A7,X
	STA $44
	LDY $90
	LDX $91
	JSR L_D3D4
	LDY $90
	LDX $91
	INY
	INY
	LDA #$01
	JSR buffer_add
	LDA #$00
	STA $033A,X
	INX
	JSR buffer_end
	JSR L_17_8E48
	BCC @Loop3
	LDX $94
	LDA $A7,X
	ORA #$80
	STA $A7,X
	LDX $B8
	LDA $90
	SEC
	SBC #$81
	LSR
	LSR
	CLC
	ADC #$20
	STA $0210,X
	LDA #$02
	STA $0211,X
	LDA #$00
	STA $0212,X
	LDA #$18
	STA $0213,X
	TXA
	CLC
	ADC #$04
	STA $B8
@Loop3:
	LDA $90
	CLC
	ADC #$20
	STA $90
	LDA $91
	ADC #$00
	STA $91
	INC $92
	INC $94
	INC $94
	DEC $93
	BNE @Loop2
	LDA $6F
	STA $6E
	LDX #$11 ; BANK18
	JSR bank_swap_A000
	RTS

L_17_8E48:
	LDX #$00
	LDA $6F
	CMP #$1D
	BCC @Loop1
	LDX #$3C
@Loop1:
	LDY #$1E
@Loop2:
	LDA $66D0,X
	CMP $45
	BNE @Loop3
	LDA $66D1,X
	CMP $44
	BEQ @Loop4
@Loop3:
	INX
	INX
	DEY
	BNE @Loop2
	CLC
	RTS
@Loop4:
	SEC
	RTS

L_17_8E6B:
	JSR L_17_8F9F
	STA $8E
	LDA #$64
	STA $90
	LDA #$21
	STA $91
	LDA #$11
	JSR L_17_8EA6
	LDA #$B4
	STA $90
	LDA #$21
	STA $91
	LDA #$0B
	JSR L_17_8EA6
	LDA #$34
	STA $90
	LDA #$23
	STA $91
	JSR L_17_8EB0
	LDA #$74
	STA $90
	LDA #$23
	STA $91
	JSR L_17_8EB0
	LDX #$11 ; BANK18
	JSR bank_swap_A000
	RTS

L_17_8EA6:
	STA $92
@Loop1:
	JSR L_17_8EB0
	DEC $92
	BNE @Loop1
	RTS

L_17_8EB0:
	LDX $8E
	LDA $66D0,X
	STA $45
	LDA $66D1,X
	STA $44
	LDY $90
	LDX $91
	JSR L_D3BA
	INC $8E
	INC $8E
	LDA $90
	CLC
	ADC #$20
	STA $90
	LDA $91
	ADC #$00
	STA $91
	RTS

L_17_8ED5:
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA $6C
	CMP #$1D
	BCS @Loop3
	LDY #$F8
@Loop1:
	LDA $6650,Y
	STA $6586,Y
	INY
	BNE @Loop1
	LDY #$F8
@Loop2:
	LDA $6658,Y
	STA $658E,Y
	INY
	BNE @Loop2
	LDY #$00
	LDA #$00
	LDX #$00
	JSR L_17_8F3C
	LDY #$3C
	LDA #$08
	LDX #$34
	JSR L_17_8F3C
	LDA #$C0
	STA PRG_RAM_PROTECT
	RTS
@Loop3:
	LDY #$F8
@Loop4:
	LDA $6650,Y
	STA $658E,Y
	INY
	BNE @Loop4
	LDY #$F8
@Loop5:
	LDA $6658,Y
	STA $6586,Y
	INY
	BNE @Loop5
	LDY #$3C
	LDA #$08
	LDX #$00
	JSR L_17_8F3C
	LDY #$00
	LDA #$00
	LDX #$34
	JSR L_17_8F3C
	LDA #$C0
	STA PRG_RAM_PROTECT
	RTS

L_17_8F3C:
	STY $43
	STA $42
	LDA #$00
	STA $44
	LDA #$1A
	STA $45
@Loop1:
	LDA $44
	CMP #$06
	BCC @Loop2
	CMP #$18
	BCC @Loop3
	SEC
	SBC #$12
@Loop2:
	CLC
	ADC $42
	TAY
	LDA $66C0,Y
	JMP @Loop4
@Loop3:
	TAY
	LDA L_17_951C,Y
@Loop4:
	CLC
	ADC $43
	TAY
	LDA $66D0,Y
	STA $6610,X
	LDA $66D1,Y
	STA $6611,X
	INC $44
	INX
	INX
	DEC $45
	BNE @Loop1
	RTS

L_17_8F7C:
	LDA $A0
	LDX $6F
	CPX #$1D
	BCC @Loop1
	CLC
	ADC #$0E
@Loop1:
	RTS

L_17_8F88:
	LDA $E1
	LDX $E2
L_17_8F8C:
	BEQ @Loop1
	CLC
	ADC #$0F
	CMP #$1D
	BCC @Loop1
	LSR
	CLC
	ADC #$0E
@Loop1:
	TAY
	ASL
	JSR L_17_8FA1
	RTS

L_17_8F9F:
	LDA #$00
L_17_8FA1:
	LDX $6E
	CPX #$1D
	BCC @Loop1
	CLC
	ADC #$3C
@Loop1:
	TAX
	RTS

L_17_8FAC:
	LDA #$19 ; BANK26
	LDY #<L_26_8018
	LDX #>L_26_8018
	JSR bank_swap_8000_jump
	JSR L_17_A877
	LDX $E2
	LDA L_17_BFAA,X
	STA $030C
	LDA L_17_BFAA+3,X
	STA $030D
	LDA #$80
	STA $030B
	LDA #$0F
	STA $4B
	RTS

L_17_8FD0:
	LDA #$00
	STA $E1
	STA $E2
@Loop1:
	LDA #$1E
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDA #$13 ; BANK20
	LDY #<L_20_8803
	LDX #>L_20_8803
	JSR bank_swap_8000_jump
	LDX #$11 ; BANK18
	JSR bank_swap_A000
	LDA #$00
	STA $030B
	LDA $6E
	CLC
	ADC #$40
	LDY #$54
	LDX #$20
	JSR L_CF61
	JSR L_17_AD40
	JSR L_17_AD59
	LDA #$20
	STA $4C
	LDA #$2E
	STA $4D
	LDA #$2F
	LDX #$30
	JSR L_D1D5
	LDA #$01
	JSR switch_thread
	LDA #$0D
	JSR L_C3FB
	LDY #<PLAYBOOK_SELECT
	LDX #>PLAYBOOK_SELECT
	LDA #$02
	JSR set_xymenu_arrow
	JMP @Loop3
@Loop2:
	LDA #$01
	JSR switch_thread
	JSR xymenu_move
	BCC @Loop6
	JSR xymenu_set_xy
	LDA $E1
	CMP #$02
	BCS @Loop4
@Loop3:
	LDA #$62
	STA $3E
	LDA #$23
	STA $3F
	LDA #$13 ; BANK20
	LDY #<L_20_8809
	LDX #>L_20_8809
	JSR bank_swap_8000_jump
	LDX #$11 ; BANK18
	JSR bank_swap_A000
	JSR L_17_AD59
	JMP @Loop6
@Loop4:
	LDY #$62
	LDX #$23
	LDA #$01
	STA $3F
	LDA #$10
	STA $3E
	JSR L_D09B
	LDX #$00
	LDA #$F0
@Loop5:
	STA $0210,X
	INX
	INX
	INX
	INX
	CPX #$20
	BCC @Loop5
@Loop6:
	BIT JOYPAD_PRESS
	BVC @Loop7
	JMP @Loop21
@Loop7:
	BPL @Loop2
	LDA $E1
	CMP #$02
	BCC @Loop8
	JMP @Loop19
@Loop8:
	CMP #$01
	BEQ @Loop9
	LDY #$00
	LDX #$22
	LDA #$0C
	STA $3F
	LDA #$20
	STA $3E
	JSR L_D09B
	LDY #$00
	LDX #$26
	LDA #$0C
	STA $3F
	LDA #$20
	STA $3E
	JSR L_D09B
	LDY #<L_17_BB8A
	LDX #>L_17_BB8A
	JSR L_C481
	LDA #$1F
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDA $E2
	JSR L_17_91E5
	LDA #$24
	STA $3E
	LDA #$22
	STA $3F
	JMP @Loop10
@Loop9:
	LDY #$80
	LDX #$20
	LDA #$0C
	STA $3F
	LDA #$20
	STA $3E
	JSR L_D09B
	LDY #$80
	LDX #$24
	LDA #$0C
	STA $3F
	LDA #$20
	STA $3E
	JSR L_D09B
	LDY #<L_17_BB94
	LDX #>L_17_BB94
	JSR L_C481
	LDA #$20
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDA $E2
	CLC
	ADC #$04
	JSR L_17_91E5
	LDA #$40
	STA $0230
	STA $0234
	STA $0240
	STA $0244
	LDA #$48
	STA $0238
	STA $023C
	STA $0248
	STA $024C
	LDA #$64
	STA $3E
	LDA #$20
	STA $3F
@Loop10:
	LDA $E2
	CLC
	ADC #$02
	STA $43
	LDA #$13 ; BANK20
	LDY #<L_20_880C
	LDX #>L_20_880C
	JSR bank_swap_8000_jump
	LDX #$11 ; BANK18
	JSR bank_swap_A000
	LDA #$02
	STA $42
@Loop11:
	LDA #$01
	JSR switch_thread
	LDA $37
	LSR
	BCS @Loop12
	LSR
	BCS @Loop13
	JMP @Loop16
@Loop12:
	INC $42
	LDY #$04
	LDX #$00
	JMP @Loop14
@Loop13:
	DEC $42
	LDY #$FC
	LDX #$FF
@Loop14:
	STY $40
	STX $41
	LDA $42
	AND #$07
	STA $42
	CLC
	ADC $E2
	STA $43
	LDA #$13 ; BANK20
	LDY #<L_20_880C
	LDX #>L_20_880C
	JSR bank_swap_8000_jump
	LDX #$11 ; BANK18
	JSR bank_swap_A000
	LDX #$10
@Loop15:
	LDA #$01
	JSR switch_thread
	LDA $030C
	CLC
	ADC $40
	STA $030C
	LDA $030D
	ADC $41
	AND #$01
	STA $030D
	DEX
	BNE @Loop15
@Loop16:
	BIT $3A
	BVS @Loop17
	BPL @Loop11
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA $E2
	LSR
	LSR
	LSR
	TAX
	LDA $42
	CLC
	ADC $E2
	STA $667E,X
	JSR L_17_9249
@Loop17:
	LDA #$00
	STA $E1
	LDA $E2
	LSR
	LSR
	LSR
	CMP #$04
	BCC @Loop18
	INC $E1
	AND #$03
@Loop18:
	STA $E2
	JMP @Loop1
@Loop19:
	LDA $6E
	STA $43
	LDA #$19 ; BANK26
	LDY #<L_26_800F
	LDX #>L_26_800F
	JSR bank_swap_8000_jump
	LDA $6E
	CMP #$1C
	BCS @Loop20
	JSR L_17_9D69
	JSR L_17_9CAA
	JMP L_17_8FD0
@Loop20:
	JSR L_17_8ED5
	JMP L_17_8FD0
@Loop21:
	RTS

L_17_91E5:
	ASL
	ASL
	ASL
	AND #$38
	STA $43
	STA $E2
	LDA #$00
	STA $42
@Loop1:
	LDA $E1
	ASL
	ASL
	ASL
	CLC
	ADC $42
	ASL
	TAX
	LDA @Loop3,X
	STA $3E
	LDA @Loop3+1,X
	STA $3F
	LDA #$13 ; BANK20
	LDY #<L_20_8806
	LDX #>L_20_8806
	JSR bank_swap_8000_jump
	INC $43
	INC $42
	LDA $42
	CMP #$08
	BCC @Loop1
	LDY #$E0
@Loop2:
	LDA PLAY_SELECT_ARROWS-$E0,Y
	STA $0150,Y
	INY
	BNE @Loop2
	LDA #$0D
	JMP L_C3FB
@Loop3:	.WORD $2261, $2269, $2271, $2279, $2661, $2669, $2671, $2679
		.WORD $20A1, $20A9, $20B1, $20B9, $24A1, $24A9, $24B1, $24B9

L_17_9249:
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA $6E
	JSR L_DEC8
	LDY #$F2
	LDX #$00
@Loop1:
	LDA $667E,X
	AND #$07
	ASL
	ASL
	ASL
	ASL
	STA $45
	LDA $667F,X
	AND #$07
	ORA $45
	STA ($3E),Y
	INX
	INX
	INY
	CPY #$F6
	BCC @Loop1
	LDA #$80
	STA PRG_RAM_PROTECT
	RTS

L_17_9278:
	JSR L_17_9D69
	JSR L_17_9CAA
	JSR L_D194
	LDA #$34
	LDX #$07 ; BANK8
	JSR L_17_B472
	JSR L_17_A000
	LDA #$00
	STA $E1
	STA $E2
	JMP L_17_8089

L_17_9294:
	LDA $37
	AND #$10
	BEQ @Loop1
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA $6002
	ORA #$80
	STA $6002
	LDA #$C0
	STA PRG_RAM_PROTECT
@Loop1:
	JSR L_D194
	LDA $6758
	CMP #$11
	BCS @Loop3
	JSR L_17_9492
	JSR L_D194
	JSR L_17_9D69
	JSR L_17_A432
	JSR L_17_9CAA
	JSR L_17_A4A2
	BCS @Loop2
	LDA $6758
	CLC
	ADC #$36
	LDX #$07 ; BANK8
	JSR L_17_B472
@Loop2:
	JSR L_17_A000
	JSR L_17_A4B4
	JMP @Loop13
@Loop3:
	LDA $2D
	ORA #$03
	STA $2D
	LDA $6759
	CMP #$0B
	BCC @Loop4
	JMP @Loop11
@Loop4:
	ASL
	ASL
	TAX
	LDA $6776,X
	STA $6C
	LDA $6777,X
	STA $6D
	JSR L_17_94A1
	JSR L_D194
	JSR L_17_9D69
	JSR L_17_A432
	JSR L_17_9CAA
	LDA $6759
	CLC
	ADC #$50
	LDX #$07 ; BANK8
	JSR L_17_B472
	JSR L_17_A000
	JSR L_17_9DBA
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA $6759
	ASL
	ASL
	TAX
	LDA $6776,X
	CMP $6C
	BEQ @Loop5
	LDA $6C
	LDY $6D
	STY $6C
	STA $6D
	LDA $0399
	LDY $039E
	STY $0399
	STA $039E
@Loop5:
	LDA $0399
	STA $6778,X
	LDA $039E
	STA $6779,X
	LDA $0399
	CMP $039E
	BCC @Loop6
	LDX $6C
	LDY $6D
	JMP @Loop7
@Loop6:
	LDX $6D
	LDY $6C
@Loop7:
	STX $6E
	STY $6F
	LDY $6759
	CPY #$0A
	BCS @Loop8
	LDA @Loop17,Y
	TAY
	TXA
	STA $6776,Y
@Loop8:
	LDA #$80
	STA PRG_RAM_PROTECT
	INC $6759
	JSR store_sram_checksum
	LDA #$C0
	STA PRG_RAM_PROTECT
	LDA $6759
	CMP #$09
	BCC @Loop13
	BEQ @Loop9
	CMP #$0A
	BNE @Loop11
	LDA #$6B
	JMP @Loop10
@Loop9:
	LDA #$3A
@Loop10:
	LDX #$06 ; BANK7
	JSR L_C3A2
	JSR L_17_B489
	JMP @Loop13
@Loop11:
	LDX #$00
	LDA $67A0
	CMP $67A1
	BCS @Loop12
	INX
@Loop12:
	LDA $679E,X
	STA $6E
	JSR L_17_B489
	LDA #$3B
	LDX #$06 ; BANK7
	JSR L_C3A2
	JSR L_17_B489
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA #$00
	STA $6002
	LDA #$C0
	STA PRG_RAM_PROTECT
@Loop13:
	LDA #$02
	STA $E1
	LDA #$00
	STA $E2
	JSR L_17_A4A2
	BCS @Loop15
	LDA $6002
	BPL @Loop14
	JMP L_17_9294
@Loop14:
	JMP L_17_8265
@Loop15:
	BIT $37
	BVS @Loop16
	JSR L_17_9492
	LDA $75
	CMP #$33
	BNE @Loop16
	JMP L_17_9294
@Loop16:
	JMP L_17_8265
@Loop17:	.BYTE $11, $15, $19, $1D, $20, $24, $21, $25, $28, $29, $2C

L_17_9404:
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA #$05
	LDX #$01
	LDY #$06
	STY $44
	LDY #$64
	JSR clear_ram_size
	LDA #$05
	LDX #$01
	LDY #$0B
	STY $44
	LDY #$65
	JSR clear_ram_size
	LDA #$C0
	STA PRG_RAM_PROTECT
	JSR L_17_8ED5
	JSR L_D194
	LDA #$35
	LDX #$07 ; BANK8
	JSR L_17_B472
	JSR L_17_A053
	LDA #$02
	STA $E1
	LDA #$00
	STA $E2
	JMP L_17_8089

L_17_9443:
	LDA #$03
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDA #$00
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDA #$B0
	JMP L_17_ACEF

L_17_9456:
	LDA #$45
	STA $3E
	LDA #$25
	STA $3F
	LDA #$03
	STA $40
	LDA #$60
	STA $41
	LDX #$0F
	LDY #$0F
	JSR L_17_94D4
	LDA #$01
	LDX #$0F ; BANK16
	JMP L_C3A2

L_17_9474:
	LDA #$C5
	STA $3E
	LDA #$25
	STA $3F
	LDA #$03
	STA $40
	LDA #$60
	STA $41
	LDX #$0F
	LDY #$0F
	JSR L_17_94D4
	LDA #$17
	LDX #$0F ; BANK16
	JMP L_C3A2

L_17_9492:
	LDA $6759
	ASL
	TAX
	LDA $675A,X
	STA $6C
	LDA $675B,X
	STA $6D
L_17_94A1:
	LDX $6C
	LDA $669B,X
	STA $45
	LDX $6D
	LDA $669B,X
	CMP $45
	BCS @Loop1
	LDX $6C
	LDY $6D
	STX $6D
	STY $6C
	JSR L_17_94C3
	SEC
	RTS
@Loop1:
	JSR L_17_94C3
	CLC
	RTS

L_17_94C3:
	LDX $6C
	LDA $669B,X
	ASL
	ASL
	ASL
	ASL
	LDX $6D
	ORA $669B,X
	STA $75
	RTS

L_17_94D4:
	LDA #$80
	STA PRG_RAM_PROTECT
	JSR L_D2F1
	LDA #$C0
	STA PRG_RAM_PROTECT
	RTS

L_17_94E2:
	JSR L_17_94F4
	JSR L_D28B
	LDA #$01
	STA $0700
	JSR L_D10E
	JSR clear_sprites
	RTS

L_17_94F4:
	LDX #$0C
	JSR L_CCDD
	LDX #$11
	JSR L_CCDD
	LDX #$16
	JSR L_CCDD
	LDX #$1B
	JSR L_CCDD
	LDA #$00
	STA $57
	STA $58
	RTS

L_17_950F:
	LDA #$01
	JMP L_17_962A

L_17_9514:
	LDX #$11 ; BANK18
	JSR bank_swap_A000
	JMP L_17_B883

L_17_951C:	.BYTE $00, $04, $06, $0C, $0E, $14, $18, $1A, $1C, $1E, $20, $22, $24
		.BYTE $26, $28, $2A, $2C, $2E, $30, $32, $34, $36, $38, $3A, $3C, $3E
L_17_9536:	.BYTE $00
	.BYTE $02
	.BYTE $00
	.BYTE $00
	.BYTE $00
	.BYTE $02
	.BYTE $00
	.BYTE $00
	.BYTE $02
	.BYTE $04
	.BYTE $11
	.BYTE $03
	.BYTE $02
	.BYTE $04
	.BYTE $11
	.BYTE $03
	.BYTE $02
	.BYTE $04
	.BYTE $11
	.BYTE $03
	.BYTE $02
	.BYTE $04
	.BYTE $14
	.BYTE $04
	.BYTE $06
	.BYTE $04
	.BYTE $14
	.BYTE $04
	.BYTE $06
	.BYTE $04
	.BYTE $14
	.BYTE $04
	.BYTE $06
	.BYTE $04
	.BYTE $14
	.BYTE $04
	.BYTE $06
	.BYTE $04
	.BYTE $18
	.BYTE $02
	.BYTE $0A
	.BYTE $02
	.BYTE $18
	.BYTE $02
	.BYTE $0A
	.BYTE $02
	.BYTE $1A
	.BYTE $02
	.BYTE $0C
	.BYTE $01
	.BYTE $1A
	.BYTE $02
	.BYTE $0D
	.BYTE $02
	.BYTE $00
	.BYTE $00
	.BYTE $0D
	.BYTE $02
	.BYTE $1C
	.BYTE $01
	.BYTE $0F
	.BYTE $02
	.BYTE $00
	.BYTE $00
	.BYTE $0F
	.BYTE $02
	.BYTE $1D
	.BYTE $01
L_17_957A:
	.WORD L_17_9582, L_17_9587, L_17_958D, L_17_9594
L_17_9582:
	.BYTE $00,$00,$18
	.BYTE $01
	.BYTE $20
L_17_9587:
	.BYTE $00,$00,$18
	.BYTE $02
	.BYTE $20, $28
L_17_958D:
	.BYTE $00,$00,$18
	.BYTE $03
	.BYTE $20, $28, $30
L_17_9594:
	.BYTE $00,$00,$18
	.BYTE $04
	.BYTE $20, $28, $30, $38

PRO_BOWL_TEAM_MENU_SELECT:
; Arrow Tile, Arrow Invert/Palette
	.BYTE $00,$00
; Y,X
	.BYTE $03,$02
; Arrow Destinations
	.BYTE $20,$10
	.BYTE $20,$90
	.BYTE $28,$10
	.BYTE $28,$90
	.BYTE $30,$10
	.BYTE $30,$90

PRO_BOWL_PLAYER_SELECT:
; Arrow Tile, Arrow Invert/Palette
	.BYTE $00,$00
; Y,X
	.BYTE $11,$02
; Arrow Destinations
	.BYTE $58,$18
	.BYTE $FF,$FF
	.BYTE $60,$18
	.BYTE $FF,$FF
	.BYTE $68,$18
	.BYTE $68,$98
	.BYTE $70,$18
	.BYTE $70,$98
	.BYTE $78,$18
	.BYTE $78,$98
	.BYTE $80,$18
	.BYTE $80,$98
	.BYTE $88,$18
	.BYTE $88,$98
	.BYTE $90,$18
	.BYTE $90,$98
	.BYTE $98,$18
	.BYTE $98,$98
	.BYTE $A0,$18
	.BYTE $A0,$98
	.BYTE $A8,$18
	.BYTE $A8,$98
	.BYTE $B0,$18
	.BYTE $B0,$98
	.BYTE $B8,$18
	.BYTE $B8,$98
	.BYTE $C0,$18
	.BYTE $FF,$FF
	.BYTE $C8,$18
	.BYTE $C8,$98
	.BYTE $D0,$18
	.BYTE $FF,$FF
	.BYTE $D8,$18
	.BYTE $D8,$98

PRO_BOWL_PLAYER_DATA_LEFTOVER_ARROW:
; Y
	.BYTE $20
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $00,$01,$10

PRO_BOWL_CHANGE_PLAYERS_LEFTOVER_ARROW:
; Y
	.BYTE $28
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $00,$01,$10

PLAYBOOK_SELECT:
	.BYTE $00,$00
	.BYTE $03,$04
	.BYTE $F8,$00
	.BYTE $F8,$00
	.BYTE $F8,$00
	.BYTE $F8,$00
	.BYTE $F8,$00
	.BYTE $F8,$00
	.BYTE $F8,$00
	.BYTE $F8,$00
	.BYTE $D8,$98
	.BYTE $D8,$98
	.BYTE $D8,$98
	.BYTE $D8,$98

PRO_BOWL_RESET_WORDS:
	.BYTE $08,"NO   YES",$FF

PRO_BOWL_RESET_SELECT:
; Arrow Tile, Arrow Invert/Palette
	.BYTE $00,$00
; Y,X
	.BYTE $01,$02
; Arrow Destinations
	.BYTE $38,$30
	.BYTE $38,$58

L_17_962A:
	STA $8E
	LDA #$00
	STA $E1
	STA $E2
L_17_9632:
	LDY #THREE_WIDE_FORMATION
	LDA $6E
	CMP #SAN_DIEGO
	BEQ @Loop1
	CMP #WASHINGTON
	BEQ @Loop1
	CMP #PHOENIX
	BEQ @Loop1
	DEY
	CMP #HOUSTON
	BEQ @Loop1
	CMP #DETROIT
	BEQ @Loop1
	CMP #ATLANTA
	BEQ @Loop1
	DEY
@Loop1:
	STY $8F
	LDA $8E
	ASL
	CLC
	ADC $8E
	CLC
	ADC #$32
	CLC
	ADC $8F
	LDX #$0F
	JSR L_C3AF
	LDA $6E
	CLC
	ADC #$40
	LDY #$54
	LDX #$20
	JSR L_CF61
	LDX #$11 ; BANK18
	JSR bank_swap_A000
	JSR L_17_9961
	LDA #$00
	STA $030B
	LDA #$2E
	LDX #$2F
	JSR L_D1D5
	LDA #$03
	JSR L_C3FB
	BIT $6F
	BPL @Loop2
	JMP @Loop39
@Loop2:
	JSR L_17_9C54
@Loop3:
	LDA #$01
	JSR switch_thread
	JSR ymenu_up_down
	LDA $8E
	LSR
	BCS @Loop5
	LDA #$20
	LDX $E1
	BNE @Loop4
	LDA #$10
@Loop4:
	STA $0203
@Loop5:
	JSR ymenu_set_y
	JSR L_17_9B1F
	LDA $3A
	AND #$10
	BEQ @Loop6
	JMP @Loop34
@Loop6:
	BIT $3A
	BVC @Loop7
	JMP @Loop36
@Loop7:
	BPL @Loop3
	LDA $8E
	LSR
	BCC @Loop8
	JMP @Loop16
@Loop8:
	LDA $E1
	ORA $E2
	BEQ @Loop9
	JMP @Loop15
@Loop9:
	LDA #$F0
	STA $0200
	LDA #$42
	STA $3E
	LDA #$21
	STA $3F
	LDA #$03
	STA $40
	LDA #$60
	STA $41
	LDX #$0A
	LDY #$08
	JSR L_17_94D4
	LDA #$38
	LDX #$0F
	JSR L_C3AF
	LDX #$11 ; BANK18
	JSR bank_swap_A000
	LDY #<STARTER_RESET_SELECT
	LDX #>STARTER_RESET_SELECT
	LDA #$02
	JSR set_ymenu_arrow
@Loop10:
	LDA #$01
	JSR switch_thread
	JSR ymenu_up_down
	JSR ymenu_set_y
	BIT $3A
	BVS @Loop14
	BPL @Loop10
	LDA $E1
	BEQ @Loop14
	LDA $6E
	CMP #$1C
	BCS @Loop11
	JSR L_17_B883
	JSR L_17_9CAA
	JMP @Loop14
@Loop11:
	BNE @Loop12
	LDA #$19 ; BANK26
	LDY #<L_26_8021
	LDX #>L_26_8021
	JSR bank_swap_8000_jump
	JMP @Loop13
@Loop12:
	LDA #$19 ; BANK26
	LDY #<L_26_8024
	LDX #>L_26_8024
	JSR bank_swap_8000_jump
@Loop13:
	JSR L_17_8ED5
@Loop14:
	LDY #$42
	LDX #$21
	LDA #$03
	STA $3E
	LDA #$60
	STA $3F
	JSR L_CCFC
	LDA #$00
	STA $E1
	JSR L_17_9961
	LDA #$03
	JSR L_C3FB
	JMP @Loop2
@Loop15:
	LDA $E1
	SEC
	SBC #$01
	JMP @Loop17
@Loop16:
	LDA $E1
@Loop17:
	STA $45
	CMP #$06
	BCC @Loop18
	JMP @Loop28
@Loop18:
	CMP #$01
	BCS @Loop22
	LDA $A3
	BMI @Loop21
	JSR L_17_9BF9
	LDY #$FC
@Loop19:
	LDA QB_RESERVE_SELECT-$FC,Y
	STA $0104,Y
	INY
	BNE @Loop19
@Loop20:
	LDA #$01
	JSR switch_thread
	BIT $3A
	BVS @Loop21
	BPL @Loop20
	LDX #$00
	LDY #$00
	JSR L_17_9C29
	JSR L_17_9B51
@Loop21:
	LDA #$F0
	STA $0204
	JMP @Loop2
@Loop22:
	JSR L_17_9C48
	BCC @Loop23
	JMP @Loop2
@Loop23:
	JSR L_17_9BF9
	LDA $E1
	STA $91
	LDA #$00
	STA $E1
	JSR L_17_9C7D
	JSR L_17_9C6C
@Loop24:
	LDA #$01
	JSR switch_thread
@Loop25:
	JSR ymenu_up_down
	LDA $E1
	ASL
	TAX
	LDA $A5,X
	BMI @Loop25
	JSR ymenu_set_y
	BIT $3A
	BVC @Loop26
	JMP @Loop33
@Loop26:
	BPL @Loop24
	LDX $E1
	LDY $91
	LDA $8E
	BNE @Loop27
	DEY
@Loop27:
	INX
	JSR L_17_9C29
	JSR L_17_9B51
	JMP @Loop33
@Loop28:
	JSR L_17_9BF9
	LDA $E1
	STA $91
	JSR L_17_9C8B
	LDY $E7
	LDX $E8
	LDA #$02
	JSR set_ymenu_arrow
	LDA #$01
	STA $ED
	JSR L_17_9C48
	BCC @Loop29
	DEC $ED
@Loop29:
	LDA #$01
	JSR switch_thread
	JSR L_17_AC6D
@Loop30:
	JSR ymenu_up_down
@Loop31:
	LDA $E2
	ASL
	ASL
	ASL
	CLC
	ADC $E1
	ASL
	TAX
	LDA $95,X
	BPL @Loop32
	LDA $3A
	AND #$03
	BEQ @Loop30
	INC $E1
	JMP @Loop31
@Loop32:
	JSR ymenu_set_y
	BIT $3A
	BVS @Loop33
	BPL @Loop29
	JSR L_17_9C0A
	JSR L_17_9B51
@Loop33:
	LDA $91
	STA $E1
	LDA #$00
	STA $E2
	LDA #$F0
	STA $0204
	JMP @Loop2
@Loop34:
	LDX $E1
	LDA $8E
	BNE @Loop35
	DEX
	BPL @Loop35
	JMP @Loop3
@Loop35:
	TXA
	ASL
	TAX
	LDA $6E
	PHA
	LDA $8E
	PHA
	LDA $92,X
	STA $6E
	LDA $93,X
	STA $43
	LDA #$18 ; BANK25
	LDY #<L_25_8003
	LDX #>L_25_8003
	JSR bank_swap_8000_jump
	PLA
	STA $8E
	PLA
	STA $6E
	JMP L_17_9632
@Loop36:
	LDX #$00
@Loop37:
	LDA $93,X
	BPL @Loop38
	JMP @Loop2
@Loop38:
	INX
	INX
	CPX #$10
	BCC @Loop37
	LDX #$1B
	JSR L_CCDD
	RTS
@Loop39:
	JSR L_17_9C54
	LDA #$1E
	JSR switch_thread
	LDA $E1
	STA $91
	JSR L_17_9C8B
@Loop40:
	LDA $91
	ASL
	TAX
	LDA A:$93,X
	BMI @Loop41
	JMP @Loop50
@Loop41:
	TXA
	BEQ @Loop47
	LDY $8F
	BEQ @Loop42
	CLC
	ADC #$10
@Loop42:
	TAX
	LDA L_17_9F89,X
	STA $3E
	LDA L_17_9F89+1,X
	STA $3F
	LDY #$00
@Loop43:
	LDA ($3E),Y
	TAX
	LDA $93,X
	BPL @Loop44
	INY
	JMP @Loop43
@Loop44:
	TXA
	LDY #$00
	CMP #$10
	BCC @Loop45
	INY
	SEC
	SBC #$10
@Loop45:
	SEC
	SBC #$02
	LSR
	STA $E1
	STY $E2
	JSR L_17_9BF9
	LDA $E2
	ASL
	TAY
	LDA $00E7,Y
	STA $E3
	LDA $00E8,Y
	STA $E4
	JSR L_D690
	LDA $91
	CMP #$06
	BCS @Loop46
	LDX $E1
	LDY $91
	INX
	JSR L_17_9C29
	JMP @Loop49
@Loop46:
	JSR L_17_9C0A
	JMP @Loop49
@Loop47:
	JSR L_17_9BF9
	LDY #$FC
@Loop48:
	LDA QB_RESERVE_SELECT-$FC,Y
	STA $0104,Y
	INY
	BNE @Loop48
	LDX #$00
	LDY #$00
	JSR L_17_9C29
@Loop49:
	JSR ymenu_set_y
	LDA #$3C
	JSR switch_thread
	LDA #$F0
	STA $0204
	JSR L_17_9B51
@Loop50:
	INC $91
	LDA $91
	CMP #$08
	BCS @Loop51
	LDA $91
	STA $E1
	LDA #$00
	STA $E2
	JSR L_17_9C54
	LDA #$0A
	JSR switch_thread
	JMP @Loop40
@Loop51:
	LDA #$F0
	STA $0200
	STA $0204
	LDA #$3C
	JSR switch_thread
	LDX #$1B
	JSR L_CCDD
	RTS

L_17_9961:
	LDA $6E
	CMP #$1C
	BCS @Loop7
	LDX #$00
	LDA $6E
@Loop1:
	STA $92,X
	INX
	CPX #$1C
	BCC @Loop1
	JSR L_17_9AF5
	LDA $93
	EOR #$01
	STA $A3
	LDX #$00
	LDA #$02
@Loop2:
	LDY #$00
@Loop3:
	CMP $0095,Y
	BEQ @Loop4
	INY
	INY
	CPY #$0A
	BCC @Loop3
	STA $A5,X
	INX
	INX
@Loop4:
	CLC
	ADC #$01
	CMP #$0C
	BCC @Loop2
	LDA #$1A
	STA $44
@Loop5:
	LDX $44
	LDA $93,X
	JSR L_DE15
	BCC @Loop6
	LDX $44
	LDA $93,X
	ORA #$80
	STA $93,X
	CPX #$10
	BCS @Loop6
	TXA
	LSR
	STA $E1
@Loop6:
	LDA $44
	SEC
	SBC #$02
	STA $44
	BPL @Loop5
	JMP @Loop12
@Loop7:
	JSR L_17_9AF5
	JSR L_17_8F9F
	STX $45
	LDA #$00
	STA $44
	STA $43
@Loop8:
	LDX #$00
@Loop9:
	LDA $44
	CLC
	ADC $45
	TAY
	LDA $66D0,Y
	CMP $92,X
	BNE @Loop10
	LDA $66D1,Y
	CMP $93,X
	BEQ @Loop11
@Loop10:
	INX
	INX
	CPX #$0C
	BCC @Loop9
	LDX $43
	LDA $66D0,Y
	STA $A2,X
	LDA $66D1,Y
	STA $A3,X
	INX
	INX
	STX $43
	CPX #$0C
	BCS @Loop12
@Loop11:
	INC $44
	INC $44
	JMP @Loop8
@Loop12:
L_17_9A05:
	LDA $8F
	LDX #$1C
	JSR L_D7A0
	LDA $44
	STA $90
	LDA $8F
	LDX #$0C
	JSR L_D7A0
	LDA $44
	STA $91
	LDA #$08
	STA $B8
	LDA #$00
	STA $42
@Loop13:
	LDY $42
	LDA $0093,Y
	AND #$1F
	TAX
	LDA $0092,Y
	JSR L_D52F
	LDX $42
	CPX #$0C
	BCS @Loop14
	TAY
	LDX $B8
	LSR
	LSR
	LSR
	LSR
	CLC
	ADC #$30
	STA $0201,X
	TYA
	AND #$0F
	CLC
	ADC #$30
	STA $0205,X
	LDA $42
	CLC
	ADC $91
	TAY
	LDA STARTERS_FORMATION_POSITIONING,Y
	STA $0200,X
	STA $0204,X
	LDA STARTERS_FORMATION_POSITIONING+1,Y
	STA $0203,X
	CLC
	ADC #$08
	STA $0207,X
	LDA #$00
	STA $0202,X
	STA $0206,X
	TXA
	CLC
	ADC #$08
	STA $B8
@Loop14:
	LDY $42
	LDA $0092,Y
	STA $45
	LDA $0093,Y
	AND #$1F
	STA $44
	TYA
	CLC
	ADC $90
	TAX
	LDY STARTERS_NAME_POSITIONING,X
	LDA STARTERS_NAME_POSITIONING+1,X
	TAX
	JSR L_D3BA
	LDX $42
	INX
	INX
	STX $42
	CPX #$1C
	BCC @Loop13
	LDA #$00
	LDY #$E0
@Loop15:
	STA $0160,Y
	INY
	BNE @Loop15
	LDA $8F
	LDX #$1C
	JSR L_D7A0
	LDA $44
	STA $90
	LDA #$40
	STA $B8
	LDA #$00
	STA $42
@Loop16:
	LDY $42
	LDA $0093,Y
	BPL @Loop17
	LDX $B8
	LDA #$82
	STA $0201,X
	LDA $42
	CLC
	ADC $90
	TAY
	LDA STARTERS_INJURY_MARKER_POSITIONING,Y
	STA $0200,X
	LDA STARTERS_INJURY_MARKER_POSITIONING+1,Y
	STA $0203,X
	LDA #$00
	STA $0202,X
	TXA
	CLC
	ADC #$04
	STA $B8
@Loop17:
	LDX $42
	INX
	INX
	STX $42
	CPX #$1C
	BCC @Loop16
	LDX #$11 ; BANK18
	JSR bank_swap_A000
	RTS

L_17_9AF5:
	LDY #$00
	LDA $70
	BPL @Loop1
	LDY #$34
@Loop1:
	LDA $6640,Y
	STA $9E
	LDA $6641,Y
	STA $9F
	LDA $6642,Y
	STA $A0
	LDA $6643,Y
	STA $A1
	LDX #$00
@Loop2:
	LDA $6610,Y
	STA $92,X
	INY
	INX
	CPX #$0C
	BCC @Loop2
	RTS

L_17_9B1F:
	LDX #$00
@Loop1:
	LDA #$00
	STA $020A,X
	INX
	INX
	INX
	INX
	CPX #$30
	BCC @Loop1
	LDX $E1
	LDA $8E
	BNE @Loop2
	TXA
	BEQ @Loop4
	CPX #$07
	BCS @Loop4
	DEX
	JMP @Loop3
@Loop2:
	CPX #$06
	BCS @Loop4
@Loop3:
	TXA
	ASL
	ASL
	ASL
	TAX
	LDA #$03
	STA $020A,X
	STA $020E,X
@Loop4:
	RTS

L_17_9B51:
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA $6E
	CMP #$1C
	BCS @Loop1
	JSR L_DEC8
	LDY #$F6
	LDA $93
	JSR L_17_9BEB
	LDA $95
	JSR L_17_9BF2
	INY
	LDA $97
	JSR L_17_9BEB
	LDA $99
	JSR L_17_9BF2
	INY
	LDA $9B
	JSR L_17_9BEB
	LDA $9D
	JSR L_17_9BF2
	INY
	LDA $9F
	JSR L_17_9BEB
	LDA $A1
	JSR L_17_9BF2
	JSR L_17_9CAA
	JMP @Loop7
@Loop1:
	LDX #$00
	LDY #$00
	LDA $6E
	CMP #$1D
	BCC @Loop2
	LDX #$3C
	LDY #$08
@Loop2:
	STX $45
	STY $44
	LDX #$00
@Loop3:
	LDA #$00
	STA $42
@Loop4:
	LDA $42
	CLC
	ADC $45
	TAY
	LDA $66D0,Y
	CMP $92,X
	BNE @Loop5
	LDA $66D1,Y
	CMP $93,X
	BEQ @Loop6
@Loop5:
	INC $42
	INC $42
	JMP @Loop4
@Loop6:
	TXA
	LSR
	CLC
	ADC $44
	TAY
	LDA $42
	STA $66C0,Y
	INX
	INX
	CPX #$10
	BCC @Loop3
	JSR store_sram_checksum
	JSR L_17_8ED5
@Loop7:
	LDA $91
	PHA
	JSR L_17_9A05
	PLA
	STA $91
	LDA #$C0
	STA PRG_RAM_PROTECT
	RTS

L_17_9BEB:
	ASL
	ASL
	ASL
	ASL
	STA ($3E),Y
	RTS

L_17_9BF2:
	AND #$0F
	ORA ($3E),Y
	STA ($3E),Y
	RTS

L_17_9BF9:
	LDY #$FC
@Loop1:
	LDA $0104,Y
	STA $0108,Y
	INY
	BNE @Loop1
	LDA #$01
	STA $0206
	RTS

L_17_9C0A:
	LDA $E2
	ASL
	ASL
	ASL
	CLC
	ADC $E1
	ASL
	TAX
	LDA $91
	ASL
	TAY
	LDA $8E
	BNE @Loop1
	DEY
	DEY
@Loop1:
	LDA $94,X
	STA $0092,Y
	LDA $95,X
	STA $0093,Y
	RTS

L_17_9C29:
	TXA
	ASL
	TAX
	TYA
	ASL
	TAY
	LDA $A2,X
	PHA
	LDA $0092,Y
	STA $A2,X
	PLA
	STA $0092,Y
	LDA $A3,X
	PHA
	LDA $0093,Y
	STA $A3,X
	PLA
	STA $0093,Y
	RTS

L_17_9C48:
	LDA $A5
	AND $A7
	AND $A9
	AND $AB
	AND $AD
	ASL
	RTS

L_17_9C54:
	LDA $8E
	ASL
	CLC
	ADC $8E
	CLC
	ADC $8F
	ASL
	TAX
	LDY STARTER_SELECT,X
	LDA STARTER_SELECT+1,X
	TAX
	LDA #$02
	JSR set_ymenu_arrow
	RTS

L_17_9C6C:
	LDA $8F
	ASL
	TAX
	LDY RESERVE_SELECT,X
	LDA RESERVE_SELECT+1,X
	TAX
	LDA #$02
	JSR set_ymenu_arrow
	RTS

L_17_9C7D:
	LDA $E1
	ASL
	TAX
	LDA $A5,X
	BPL @Loop1
	INC $E1
	JMP L_17_9C7D
@Loop1:
	RTS

L_17_9C8B:
	LDA #$00
	STA $E1
	STA $E2
	LDA $8F
	ASL
	TAX
	LDA RETURNER_SELECT,X
	STA $E7
	LDA RETURNER_SELECT+1,X
	STA $E8
	LDA RESERVE_SELECT,X
	STA $E9
	LDA RESERVE_SELECT+1,X
	STA $EA
	RTS

L_17_9CAA:
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA #$06
	STA $44
	LDA #$64
	STA $45
	LDA $6C
	LDY #$00
	LDX #$00
	JSR L_17_9CD7
	LDA #$0B
	STA $44
	LDA #$65
	STA $45
	LDA $6D
	LDY #$08
	LDX #$34
	JSR L_17_9CD7
	LDA #$C0
	STA PRG_RAM_PROTECT
	RTS

L_17_9CD7:
	STY $42
	STX $43
	LDY #$1A
@Loop1:
	STA $6610,X
	INX
	INX
	DEY
	BNE @Loop1
	LDX $42
	LDA #$00
	STA $42
	LDY #$F2
@Loop2:
	LDA ($44),Y
	LSR
	LSR
	LSR
	LSR
	CLC
	ADC $42
	STA $667E,X
	LDA ($44),Y
	AND #$0F
	CLC
	ADC $42
	CLC
	ADC #$08
	STA $667F,X
	LDA $42
	CLC
	ADC #$10
	STA $42
	INX
	INX
	INY
	CPY #$F6
	BCC @Loop2
	LDX $43
	LDY #$F6
	LDA ($44),Y
	LSR
	LSR
	LSR
	LSR
	STA $6611,X
	LDA ($44),Y
	AND #$0F
	STA $6613,X
	INY
	LDA ($44),Y
	LSR
	LSR
	LSR
	LSR
	STA $6615,X
	LDA ($44),Y
	AND #$0F
	STA $6617,X
	INY
	LDA ($44),Y
	LSR
	LSR
	LSR
	LSR
	STA $6619,X
	LDA ($44),Y
	AND #$0F
	STA $661B,X
	INY
	LDA ($44),Y
	LSR
	LSR
	LSR
	LSR
	STA $6641,X
	LDA ($44),Y
	AND #$0F
	STA $6643,X
	LDY #$0C
@Loop3:
	TYA
	STA $661D,X
	INX
	INX
	INY
	CPY #$1E
	BCC @Loop3
	RTS

L_17_9D69:
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA #$00
	LDY #$0E
@Loop1:
	STA $63F8,Y
	INY
	BNE @Loop1
	LDA $6C
	LDY #$F8
	LDX #$64
	JSR L_17_9D9A
	LDA #$00
	LDY #$0E
@Loop2:
	STA $64FD,Y
	INY
	BNE @Loop2
	LDA $6D
	LDY #$FD
	LDX #$65
	JSR L_17_9D9A
	LDA #$C0
	STA PRG_RAM_PROTECT
	RTS

L_17_9D9A:
	STY $40
	STX $41
	JSR L_DEDE
	LDA $3E
	CLC
	ADC #$BD
	STA $3E
	LDA $3F
	ADC #$00
	STA $3F
	LDY #$00
@Loop1:
	LDA ($3E),Y
	STA ($40),Y
	INY
	CPY #$13
	BCC @Loop1
	RTS

L_17_9DBA:
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA $6C
	LDY #$F8
	LDX #$64
	JSR L_17_9DDA
	LDA $6D
	LDY #$FD
	LDX #$65
	JSR L_17_9DDA
	JSR store_sram_checksum
	LDA #$C0
	STA PRG_RAM_PROTECT
	RTS

L_17_9DDA:
	STY $40
	STX $41
	JSR L_DEDE
	LDA $3E
	CLC
	ADC #$BD
	STA $3E
	LDA $3F
	ADC #$00
	STA $3F
	LDY #$00
@Loop1:
	LDA ($40),Y
	STA ($3E),Y
	INY
	CPY #$13
	BCC @Loop1
	RTS

L_17_9DFA:
	STA $43
	LDY #<L_17_BB85
	LDX #>L_17_BB85
	JSR L_C481
	LDA $43
	LDX #$07 ; BANK8
	JSR L_C3A2
	JMP L_D10E

L_17_9E0D:
	JSR L_17_9E47
	LDA #$08
	JSR switch_thread
	JSR L_17_A395
	LDA $76
	CMP #$04
	BCC @Loop3
	LDY #$8A
	LDX #$21
	LDA #$03
	STA $3F
	LDA #$0B
	STA $3E
	JSR L_D09B
	LDA #$00
	LDY #$FC
@Loop1:
	STA $0299,Y
	INY
	BNE @Loop1
	LDA #$00
	LDY #$FC
@Loop2:
	STA $029E,Y
	INY
	BNE @Loop2
	LDA #$04
	JSR switch_thread
@Loop3:
	RTS

L_17_9E47:
	LDA #$8A
	STA $3E
	LDA #$21
	STA $3F
	LDA $76
	BEQ @Loop3
	CMP #$05
	BNE @Loop1
	LDA #$01
@Loop1:
	STA $43
	LDA #$00
	STA $42
@Loop2:
	LDX $42
	LDA $0395,X
	LDY $3E
	LDX $3F
	JSR L_D5A0
	LDX $42
	LDA $039A,X
	PHA
	LDA $3E
	CLC
	ADC #$40
	TAY
	LDX $3F
	PLA
	JSR L_D5A0
	LDA $3E
	CLC
	ADC #$03
	STA $3E
	LDA $3F
	ADC #$00
	STA $3F
	INC $42
	DEC $43
	BNE @Loop2
	LDY #$99
	LDX #$21
	LDA $0399
	JSR L_D5A0
	LDY #$D9
	LDX #$21
	LDA $039E
	JSR L_D5A0
@Loop3:
	RTS

STARTERS_NAME_POSITIONING:
; TWO_BACKS
	.BYTE $85,$21
	.BYTE $C5,$21
	.BYTE $E5,$21
	.BYTE $25,$22
	.BYTE $45,$22
	.BYTE $85,$22
	.BYTE $05,$23
	.BYTE $45,$23
	.BYTE $94,$21
	.BYTE $F4,$21
	.BYTE $14,$22
	.BYTE $94,$22
	.BYTE $B4,$22
	.BYTE $34,$23
; RUN_AND_SHOOT
	.BYTE $85,$21
	.BYTE $C5,$21
	.BYTE $05,$22
	.BYTE $25,$22
	.BYTE $45,$22
	.BYTE $65,$22
	.BYTE $05,$23
	.BYTE $45,$23
	.BYTE $94,$21
	.BYTE $F4,$21
	.BYTE $14,$22
	.BYTE $34,$22
	.BYTE $94,$22
	.BYTE $B4,$22
; THREE_WIDE
	.BYTE $85,$21
	.BYTE $C5,$21
	.BYTE $05,$22
	.BYTE $25,$22
	.BYTE $45,$22
	.BYTE $85,$22
	.BYTE $05,$23
	.BYTE $45,$23
	.BYTE $94,$21
	.BYTE $F4,$21
	.BYTE $14,$22
	.BYTE $34,$22
	.BYTE $94,$22
	.BYTE $34,$23

STARTERS_FORMATION_POSITIONING:
; TWO_BACKS
	.BYTE $30,$78
	.BYTE $40,$60
	.BYTE $40,$90
	.BYTE $28,$38
	.BYTE $30,$C8
	.BYTE $28,$A8
; RUN_AND_SHOOT
	.BYTE $30,$78
	.BYTE $40,$78
	.BYTE $30,$48
	.BYTE $28,$18
	.BYTE $28,$D8
	.BYTE $30,$A8
; THREE_WIDE
	.BYTE $30,$78
	.BYTE $40,$78
	.BYTE $30,$40
	.BYTE $30,$18
	.BYTE $28,$D8
	.BYTE $28,$A8

STARTERS_INJURY_MARKER_POSITIONING:
; TWO_BACKS
	.BYTE $60,$20
	.BYTE $70,$20
	.BYTE $78,$20
	.BYTE $88,$20
	.BYTE $90,$20
	.BYTE $A0,$20
	.BYTE $C0,$20
	.BYTE $D0,$20
	.BYTE $60,$98
	.BYTE $78,$98
	.BYTE $80,$98
	.BYTE $A0,$98
	.BYTE $A8,$98
	.BYTE $C8,$98
; RUN_AND_SHOOT
	.BYTE $60,$20
	.BYTE $70,$20
	.BYTE $80,$20
	.BYTE $88,$20
	.BYTE $90,$20
	.BYTE $98,$20
	.BYTE $C0,$20
	.BYTE $D0,$20
	.BYTE $60,$98
	.BYTE $78,$98
	.BYTE $80,$98
	.BYTE $88,$98
	.BYTE $A0,$98
	.BYTE $A8,$98
; THREE_WIDES
	.BYTE $60,$20
	.BYTE $70,$20
	.BYTE $80,$20
	.BYTE $88,$20
	.BYTE $90,$20
	.BYTE $A0,$20
	.BYTE $C0,$20
	.BYTE $D0,$20
	.BYTE $60,$98
	.BYTE $78,$98
	.BYTE $80,$98
	.BYTE $88,$98
	.BYTE $A0,$98
	.BYTE $C8,$98

STARTER_SELECT:
	.WORD TWO_BACK_STARTER_SELECT, RUN_AND_SHOOT_STARTER_SELECT, THREE_WIDE_STARTER_SELECT
	.WORD TWO_BACK_GAME_STARTER_SELECT, RUN_AND_SHOOT_GAME_STARTER_SELECT, THREE_WIDE_GAME_STARTER_SELECT
RESERVE_SELECT:
	.WORD TWO_BACK_RESERVE_SELECT, RUN_AND_SHOOT_RESERVE_SELECT, THREE_WIDE_RESERVE_SELECT
RETURNER_SELECT:
	.WORD TWO_BACK_RETURNER_SELECT, RUN_AND_SHOOT_RETURNER_SELECT, THREE_WIDE_RETURNER_SELECT
L_17_9F89:
	.WORD L_17_9FA9, L_17_9FAA, L_17_9FAA, L_17_9FB6, L_17_9FB6, L_17_9FBB, L_17_9FAA, L_17_9FAA
	.WORD L_17_9FA9, L_17_9FAA, L_17_9FB1, L_17_9FB1, L_17_9FB1, L_17_9FBB, L_17_9FAA, L_17_9FAA

L_17_9FA9:	.BYTE $10
L_17_9FAA:	.BYTE $12, $14, $16, $18, $1A, $06, $08
L_17_9FB1:	.BYTE $18, $1A, $16, $12, $14
L_17_9FB6:	.BYTE $16, $18, $12, $14, $1A
L_17_9FBB:	.BYTE $1A, $12, $14, $16, $18, $12, $14, $16, $18, $1A

	.BYTE $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.BYTE $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.BYTE $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.BYTE $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

L_17_A000:
	JSR L_17_A4A2
	BCS L_17_A053
	JSR L_D10E
	JSR L_17_A891
	LDA #$10
	STA $45
	LDY #$40
	LDX #$21
	LDA $6C
	CLC
	ADC #$20
	JSR L_D03B
	LDA #$0A
	STA $45
	LDY #$86
	LDX #$21
	LDA $6C
	CLC
	ADC #$40
	JSR L_D03B
	LDA #$10
	STA $45
	LDY #$00
	LDX #$23
	LDA $6D
	CLC
	ADC #$20
	JSR L_D03B
	LDA #$0A
	STA $45
	LDY #$46
	LDX #$23
	LDA $6D
	CLC
	ADC #$40
	JSR L_D03B
	JSR L_D140
	LDX #$78
	JSR L_17_B49D
L_17_A053:
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA #$00
	LDY #$F4
@Loop1:
	STA $659A,Y
	INY
	BNE @Loop1
	LDA #$C0
	STA PRG_RAM_PROTECT
	LDA #$1A ; BANK27
	LDY #<L_27_800F
	LDX #>L_27_800F
	JSR bank_swap_8000_jump
	LDA #$00
	LDY #$F6
@Loop2:
	STA $029F,Y
	INY
	BNE @Loop2
	LDA $2D
	AND #$03
	CMP #$02
	BCC @Loop7
	LDA $6758
	CMP #$11
	BCC @Loop6
	JSR L_17_B489
	LDA #$11
	LDX #$0F ; BANK16
	JSR L_C3A2
	JSR L_17_B4B3
	LDA #$78
	JSR switch_thread
	LDA $6759
	CMP #$0A
	BEQ @Loop4
	LSR
	BCS @Loop3
	LDX #$01
	JSR L_17_B49D
	JMP @Loop6
@Loop3:
	LDA #$02
	LDX #$80
	JMP @Loop5
@Loop4:
	LDA #$01
	LDX #$80
@Loop5:
	JSR L_17_B39F
	LDX #$78
	JSR L_17_B49D
	JSR L_D194
	JSR L_17_B489
	LDA #$0A
	JSR switch_thread
@Loop6:
	LDA $75
	CMP #$33
	BNE @Loop7
	JMP @Loop14
@Loop7:
	JSR L_17_ADA6
	LDA $2D
	LSR
	LSR
	LSR
	LSR
	AND #$01
	STA $72
	LDA #$03
	STA PLAYER1_TIMEOUTS
	STA PLAYER2_TIMEOUTS
	LDA FIRST_QUARTER
	STA QUARTER
	JSR L_17_A236
	JSR L_17_A395
	LDA #$2C
	JSR L_C41F
	INC QUARTER
	LDA #$21
	JSR L_17_9DFA
	JSR L_17_A236
	INC QUARTER
	LDA #$22
	JSR L_17_9DFA
	JSR L_17_AE0D
	JSR L_17_A395
	LDA $2D
	LSR
	LSR
	LSR
	LSR
	EOR #$01
	AND #$01
	STA $72
	LDA #$03
	STA PLAYER1_TIMEOUTS
	STA PLAYER2_TIMEOUTS
	JSR L_17_A236
	JSR L_17_A395
	LDA #$2C
	JSR L_C41F
	INC QUARTER
	LDA #$23
	JSR L_17_9DFA
	JSR L_17_A236
	LDA $0399
	CMP $039E
	BEQ @Loop8
	LDA #$4E
	JMP L_17_9DFA
@Loop8:
	LDA #$1B
	JSR L_17_9DFA
	LDA #$00
	LDY #$FC
@Loop9:
	STA $0299,Y
	INY
	BNE @Loop9
	LDA #$00
	LDY #$FC
@Loop10:
	STA $029E,Y
	INY
	BNE @Loop10
	INC $76
	JSR L_17_ADDB
	LDA $2D
	AND #$03
	CMP #$03
	BEQ @Loop11
	JSR L_17_A236
	LDA #$4F
	JMP L_17_9DFA
@Loop11:
	LDY #<L_17_BB85
	LDX #>L_17_BB85
	JSR L_C481
	LDA #$00
	STA $8C
	STA $8D
	JSR L_D10E
	LDA #$12
	STA $0B
	LDY #<(L_19_8000-1)
	LDA #>(L_19_8000-1)
	LDX #$07
	JSR create_thread
	LDA #$16
	STA $15
	LDY #<(L_23_9003-1)
	LDA #>(L_23_9003-1)
	LDX #$11
	JSR create_thread
@Loop12:
	LDA #$01
	JSR switch_thread
	LDA $0399
	CMP $039E
	BEQ @Loop12
	LDA $2D
	ORA #$08
	STA $2D
@Loop13:
	LDA #$01
	JSR switch_thread
	LDA $2D
	AND #$08
	BNE @Loop13
	LDA #$4F
	JMP L_17_9DFA
@Loop14:
	LDY #<L_17_BB85
	LDX #>L_17_BB85
	JSR L_C481
	LDA #$1C
	LDX #$07 ; BANK8
	JSR L_C3A2
	LDA #$0A
	JSR switch_thread
	LDA $2D
	AND #$03
	CMP #$03
	LDA #$00
	ROL
	STA $061F
	LDA #$13 ; BANK20
	LDY #<L_20_880F
	LDX #>L_20_880F
	JSR bank_swap_8000_jump
	LDY #$F8
@Loop15:
	LDA $640B,Y
	STA $0532,Y
	INY
	BNE @Loop15
	LDY #$F8
@Loop16:
	LDA $6510,Y
	STA $053A,Y
	INY
	BNE @Loop16
	JSR L_C546
	LDA #$80
	STA PRG_RAM_PROTECT
	LDY #$F4
@Loop17:
	LDA $02AB,Y
	STA $659A,Y
	INY
	BNE @Loop17
	LDA #$C0
	STA PRG_RAM_PROTECT
	JSR L_17_94F4
	JSR L_17_A4A2
	BCS @Loop19
	LDY #$4C
	LDA $76
	CMP #$05
	BCC @Loop18
	INY
@Loop18:
	TYA
	LDX #$07 ; BANK8
	JSR L_C3A2
	RTS
@Loop19:
	JSR L_17_9E47
	LDA #$14
	JSR switch_thread
	JSR L_D194
	RTS

L_17_A236:
	LDA QUARTER_SECONDS_AMOUNT
	STA QUARTER_SECONDS
	LDA QUARTER_MINUTES_AMOUNT
	STA QUARTER_MINUTES
	LDA #$00
	STA $69
	LDA $76
	LSR
	BCS @Loop1
	LDA #$12
	STA $0B
	LDY #<(L_19_8000-1)
	LDA #>(L_19_8000-1)
	LDX #$07
	JSR create_thread
	JMP @Loop2
@Loop1:
	LDX #$07
	JSR L_CC8F
@Loop2:
	LDA #$16
	STA $15
	LDY #<(L_23_9003-1)
	LDA #>(L_23_9003-1)
	LDX #$11
	JSR create_thread
@Loop3:
	LDA #$01
	JSR switch_thread
	LDA $71
	AND #$04
	BEQ @Loop3
@Loop4:
	LDA #$01
	JSR switch_thread
	BIT $69
	BMI @Loop5
	BVS @Loop9
	LDA $76
	CMP #$04
	BCC @Loop4
	LDA $0399
	CMP $039E
	BEQ @Loop4
	JMP @Loop12
@Loop5:
	LDA #$0A
	STA $3F
@Loop6:
	LDX #$14
@Loop7:
	LDA #$01
	JSR switch_thread
	BIT $69
	BPL @Loop4
	BVS @Loop9
	DEX
	BNE @Loop7
	JSR L_17_A2F9
	BCS @Loop12
	LDA $71
	AND #$04
	BNE @Loop6
	DEC $3F
	BNE @Loop6
@Loop8:
	LDA #$01
	JSR switch_thread
	LDA $71
	AND #$04
	BEQ @Loop8
	JMP @Loop5
@Loop9:
	LDA #$0A
	STA $3F
@Loop10:
	LDX #$1E
@Loop11:
	LDA #$01
	JSR switch_thread
	BIT $69
	BPL @Loop4
	BVC @Loop5
	DEX
	BNE @Loop11
	JSR L_17_A2F9
	BCS @Loop12
	DEC $3F
	BNE @Loop10
	LDA #$00
	STA $69
	JMP @Loop4
@Loop12:
	LDA $2D
	ORA #$08
	STA $2D
@Loop13:
	LDA #$01
	JSR switch_thread
	LDA $2D
	AND #$08
	BNE @Loop13
	JMP L_17_B44E

L_17_A2F9:
	DEC QUARTER_SECONDS
	BMI @Loop1
	LDA QUARTER_SECONDS
	AND #$0F
	CMP #$0A
	BCC @Loop2
	LDA QUARTER_SECONDS
	SEC
	SBC #$06
	STA QUARTER_SECONDS
	JMP @Loop2
@Loop1:
	LDA #$59
	STA QUARTER_SECONDS
	DEC QUARTER_MINUTES
	LDA QUARTER_MINUTES
	AND #$0F
	CMP #$0A
	BCC @Loop2
	LDA QUARTER_MINUTES
	SEC
	SBC #$06
	STA QUARTER_MINUTES
@Loop2:
	JSR L_17_A350
	LDA QUARTER_SECONDS
	BEQ @Loop3
	LDX QUARTER_MINUTES
	BNE @Loop4
	CMP #$0A
	BCS @Loop4
	LDA #$0F
	JSR L_C41F
	CLC
	RTS
@Loop3:
	LDA QUARTER_MINUTES
	BEQ @Loop5
	CMP #$03
	BCS @Loop4
	LDA #$0E
	JSR L_C41F
@Loop4:
	CLC
	RTS
@Loop5:
	LDA #$11
	JSR L_C41F
	SEC
	RTS

L_17_A350:
	LDA $69
	AND #$20
	BEQ @Loop1
	RTS
@Loop1:
	LDY #$4D
	LDX #$20
	LDA #$05
	JSR buffer_add
	LDA $6B
	LSR
	LSR
	LSR
	LSR
	BEQ @Loop2
	CLC
	ADC #$30
@Loop2:
	STA $033A,X
	INX
	LDA $6B
	JSR L_17_A38B
	LDA #$3A
	STA $033A,X
	INX
	LDA $6A
	LSR
	LSR
	LSR
	LSR
	JSR L_17_A38B
	LDA $6A
	JSR L_17_A38B
	JMP buffer_end

L_17_A38B:
	AND #$0F
	CLC
	ADC #$30
	STA $033A,X
	INX
	RTS

L_17_A395:
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA $70
	STA $42
	LDA #$00
	STA $70
@Loop1:
	LDA #$00
	STA $44
@Loop2:
	LDA $44
	JSR L_DE15
	LDA #$01
	BCS @Loop6
	JSR L_D8F7
	AND #$18
	BNE @Loop10
	LDA $44
	JSR L_DE2F
	STA $45
	CMP #$00
	BEQ @Loop3
	CMP #$03
	BEQ @Loop4
	JSR update_random_3B
	AND #$02
	SEC
	SBC #$01
	JMP @Loop5
@Loop3:
	LDA #$01
	JMP @Loop5
@Loop4:
	LDA #$FF
@Loop5:
	CLC
	ADC $45
@Loop6:
	STA $45
	LDA #$FC
	STA $43
	LDA $44
	EOR #$FF
	AND #$03
	BEQ @Loop8
	TAX
@Loop7:
	ASL $45
	ASL $45
	SEC
	ROL $43
	ROL $43
	DEX
	BNE @Loop7
@Loop8:
	LDA $44
	LSR
	LSR
	TAY
	BIT $70
	BMI @Loop9
	LDA $6503,Y
	AND $43
	ORA $45
	STA $6503,Y
	JMP @Loop10
@Loop9:
	LDA $6608,Y
	AND $43
	ORA $45
	STA $6608,Y
@Loop10:
	INC $44
	LDA $44
	CMP #$1E
	BCC @Loop2
	LDA $70
	BMI @Loop11
	LDA #$FF
	STA $70
	JMP @Loop1
@Loop11:
	LDA $42
	STA $70
	LDA #$C0
	STA PRG_RAM_PROTECT
	RTS

L_17_A432:
	LDA #$00
	LDX $6C
@Loop1:
	STA $70
	STX $6E
	LDA #$00
	STA $44
@Loop2:
	LDA $44
	JSR L_DE15
	BCC @Loop6
	STA $45
	CMP #$01
	BEQ @Loop5
	CMP #$02
	BEQ @Loop3
	JSR L_D8F7
	AND #$30
	BEQ @Loop5
	DEC $45
	JMP @Loop4
@Loop3:
	JSR L_D8F7
	AND #$10
	BEQ @Loop5
	DEC $45
@Loop4:
	LDA $44
	LDX $45
	JSR L_DE56
	JMP @Loop6
@Loop5:
	LDA $44
	LDX #$00
	JSR L_DE56
	JSR L_17_B883
	LDA $44
	STA $88
	STA $89
	JSR L_17_A495
@Loop6:
	INC $44
	LDA $44
	CMP #$0C
	BCC @Loop2
	LDA $70
	BMI @Loop7
	LDA #$FF
	LDX $6D
	JMP @Loop1
@Loop7:
	RTS

L_17_A495:
	JSR L_17_A4A2
	BCS @Loop1
	LDA #$26
	LDX #$07 ; BANK8
	JSR L_C3A2
@Loop1:
	RTS

L_17_A4A2:
	LDA $75
	CMP #$33
	BNE @Loop1
	LDA $6758
	CMP $669A
	BCS @Loop1
	SEC
	RTS
@Loop1:
	CLC
	RTS

L_17_A4B4:
	JSR L_17_9DBA
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA $6C
	JSR L_DEDE
	LDA $3E
	STA $40
	LDA $3F
	STA $41
	LDA $6D
	JSR L_DEDE
	LDA $0399
	CMP $039E
	BEQ @Loop2
	BCC @Loop1
	LDY #$B2
	LDX #$B3
	JMP @Loop3
@Loop1:
	LDY #$B3
	LDX #$B2
	JMP @Loop3
@Loop2:
	LDY #$B4
	LDX #$B4
@Loop3:
	LDA ($40),Y
	CLC
	ADC #$01
	STA ($40),Y
	TXA
	TAY
	LDA ($3E),Y
	CLC
	ADC #$01
	STA ($3E),Y
	LDA $0399
	JSR L_17_B43A
	TAX
	LDY #$B5
	CLC
	ADC ($40),Y
	STA ($40),Y
	INY
	LDA #$00
	ADC ($40),Y
	STA ($40),Y
	TXA
	LDY #$B7
	CLC
	ADC ($3E),Y
	STA ($3E),Y
	INY
	LDA #$00
	ADC ($3E),Y
	STA ($3E),Y
	LDA $039E
	JSR L_17_B43A
	TAX
	LDY #$B5
	CLC
	ADC ($3E),Y
	STA ($3E),Y
	INY
	LDA #$00
	ADC ($3E),Y
	STA ($3E),Y
	TXA
	LDY #$B7
	CLC
	ADC ($40),Y
	STA ($40),Y
	INY
	LDA #$00
	ADC ($40),Y
	STA ($40),Y
	LDA #$19 ; BANK26
	LDY #<L_26_802D
	LDX #>L_26_802D
	JSR bank_swap_8000_jump
	LDA $6C
	JSR L_DEDE
	LDY #$BB
	JSR L_17_A660
	LDA #$19 ; BANK26
	LDY #<L_26_802A
	LDX #>L_26_802A
	JSR bank_swap_8000_jump
	LDA $6D
	JSR L_DEDE
	LDY #$BB
	JSR L_17_A660
	LDA #$19 ; BANK26
	LDY #<L_26_8033
	LDX #>L_26_8033
	JSR bank_swap_8000_jump
	LDA $6C
	JSR L_DEDE
	LDY #$B9
	JSR L_17_A660
	LDA #$19 ; BANK26
	LDY #<L_26_8030
	LDX #>L_26_8030
	JSR bank_swap_8000_jump
	LDA $6D
	JSR L_DEDE
	LDY #$B9
	JSR L_17_A660
	LDA $6C
	STA $6E
	LDA #$00
	STA $6F
	JSR L_C588
	LDA $6D
	STA $6E
	LDA #$01
	STA $6F
	JSR L_C588
	LDA #$C0
	STA PRG_RAM_PROTECT
	JSR L_17_AE37
	LDA #$19 ; BANK26
	LDY #<L_26_8009
	LDX #>L_26_8009
	JSR bank_swap_8000_jump
	LDA #$80
	STA PRG_RAM_PROTECT
	INC $6759
	LDA $6759
	CMP $45
	BCC @Loop4
	LDA #$00
	STA $6759
	INC $6758
	LDA $6758
	CMP #$11
	BCS @Loop5
	LDA #$19 ; BANK26
	LDY #<L_26_8006
	LDX #>L_26_8006
	JSR bank_swap_8000_jump
@Loop4:
	JSR store_sram_checksum
	LDA #$C0
	STA PRG_RAM_PROTECT
	RTS
@Loop5:
	JSR L_17_B1DA
	LDA #$6F
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDA #$00
	JSR L_17_A64A
	LDA #$01
	JSR L_17_A64A
	LDA #$02
	JSR L_17_A64A
	LDA #$03
	JSR L_17_A64A
	LDA #$04
	JSR L_17_A64A
	LDA #$05
	JSR L_17_A64A
	LDA #$11
	LDX #$0F ; BANK16
	JSR L_C3A2
	JSR L_17_B4B3
	LDA #$F0
	JSR switch_thread
	LDA #$01
	LDX #$00
	JSR L_17_B39F
	LDA #$02
	JSR L_C41F
	LDA #$F0
	JSR switch_thread
	JSR L_D194
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA #$00
	STA $6002
	LDA #$C0
	STA PRG_RAM_PROTECT
	LDA #$1E
	JSR switch_thread
	LDA #$01
	JSR L_C41F
	RTS

L_17_A64A:
	JSR L_17_AF2A
	LDA #$F0
	JSR switch_thread
	LDA #$3C
	JSR switch_thread
	JSR L_D194
	LDA #$0A
	JSR switch_thread
	RTS

L_17_A660:
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA ($3E),Y
	CLC
	ADC $8E
	STA ($3E),Y
	INY
	LDA ($3E),Y
	ADC $8F
	STA ($3E),Y
	RTS

L_17_A674:
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA #$C0
	STA $3E
	LDA #$23
	STA $3F
	LDA #$03
	STA $40
	LDA #$60
	STA $41
	LDX #$20
	LDY #$02
	JSR L_D2F1
	LDA #$C0
	STA $3E
	LDA #$27
	STA $3F
	LDA #$83
	STA $40
	LDA #$60
	STA $41
	LDX #$20
	LDY #$02
	JSR L_D2F1
	LDA #$C0
	STA PRG_RAM_PROTECT
	LDA #$7A
	STA $4D
	LDA #$7B
	STA $4E
	JSR L_D559
	LDA #$10
	STA $B8
	RTS

L_17_A6BC:
	STA $40
	STY $3E
	STX $3F
	LDA $45
	ASL
	ASL
	CLC
	ADC $45
	STA $44
	LDA $40
	AND #$F8
	STA $42
	LDA #$00
	ASL $42
	ROL
	ASL $42
	ROL
	STA $43
	LDA $3E
	LSR
	LSR
	LSR
	ORA $42
	STA $42
	LDA $3F
	AND #$01
	ASL
	ASL
	ORA #$20
	ORA $43
	STA $43
	LDY $42
	LDX $43
	LDA #$02
	JSR buffer_add
	LDY $44
	LDA MINI_HELMETS,Y
	STA $033A,X
	INX
	LDA MINI_HELMETS+1,Y
	STA $033A,X
	INX
	JSR buffer_end
	LDA $42
	CLC
	ADC #$20
	TAY
	LDA $43
	ADC #$00
	TAX
	LDA #$02
	JSR buffer_add
	LDY $44
	LDA MINI_HELMETS+2,Y
	STA $033A,X
	INX
	LDA MINI_HELMETS+3,Y
	STA $033A,X
	INX
	JSR buffer_end
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA $3E
	AND #$E0
	LSR
	LSR
	LSR
	STA $43
	LDA $40
	AND #$E0
	ORA $43
	LSR
	LSR
	CMP #$20
	BCC @Loop1
	CLC
	ADC #$02
@Loop1:
	LDX $3F
	BEQ @Loop2
	ORA #$80
@Loop2:
	TAX
	LDY $44
	LDA $42
	AND #$42
	BEQ @Loop5
	CMP #$02
	BEQ @Loop4
	CMP #$40
	BEQ @Loop3
	LDA $6004,X
	AND #$3F
	STA $42
	LDA MINI_HELMETS+4,Y
	ROR
	ROR
	ROR
	AND #$C0
	JMP @Loop6
@Loop3:
	LDA $6004,X
	AND #$CF
	STA $42
	LDA MINI_HELMETS+4,Y
	ASL
	ASL
	ASL
	ASL
	AND #$30
	JMP @Loop6
@Loop4:
	LDA $6004,X
	AND #$F3
	STA $42
	LDA MINI_HELMETS+4,Y
	ASL
	ASL
	AND #$0C
	JMP @Loop6
@Loop5:
	LDA $6004,X
	AND #$FC
	STA $42
	LDA MINI_HELMETS+4,Y
	AND #$03
@Loop6:
	ORA $42
	STA $6004,X
	LDA #$C0
	STA PRG_RAM_PROTECT
	JMP L_17_A7C1

L_17_A7B2:
	STA $40
	STY $3E
	STX $3F
	LDA $45
	ASL
	ASL
	CLC
	ADC $45
	STA $44
L_17_A7C1:
	LDY $44
	LDA MINI_HELMETS+4,Y
	AND #$FC
	BEQ @Loop5
	LSR
	LSR
	TAX
	LDY MINI_HELMET_SPECIAL_SIZE-1,X
	LDA MINI_HELMET_SPECIAL_SIZE,X
	STA $43
	LDX A:$B8
@Loop1:
	LDA MINI_HELMET_SPECIAL+3,Y
	CLC
	ADC $3E
	STA $42
	LDA MINI_HELMET_SPECIAL+3,Y
	AND #$80
	BEQ @Loop2
	ORA #$FF
@Loop2:
	ADC $3F
	BNE @Loop3
	LDA MINI_HELMET_SPECIAL,Y
	CLC
	ADC $40
	STA $0200,X
	LDA MINI_HELMET_SPECIAL+1,Y
	STA $0201,X
	LDA MINI_HELMET_SPECIAL+2,Y
	STA $0202,X
	LDA $42
	STA $0203,X
	JMP @Loop4
@Loop3:
	LDA #$F0
	STA $0200,X
@Loop4:
	INX
	INX
	INX
	INX
	INY
	INY
	INY
	INY
	CPY $43
	BCC @Loop1
	STX $B8
@Loop5:
	RTS

L_17_A81E:
	LDY #$C0
	LDX #$23
	LDA #$03
	STA $3E
	LDA #$60
	STA $3F
	JSR L_CCFC
	LDY #$C0
	LDX #$27
	LDA #$83
	STA $3E
	LDA #$60
	STA $3F
	JSR L_CCFC
	RTS

L_17_A83D:
	STY $8E
	STX $8F
	JSR L_17_A674
	LDA #$00
	STA $90
@Loop1:
	LDA $90
	STA $45
	LDY #$01
	LDA ($8E),Y ; GET X COORDINATE
	ASL
	STA $44
	LDA #$00
	ROL
	TAX
	DEY
	LDA ($8E),Y ; GET Y COORDINATE
	LDY $44
	JSR L_17_A6BC
	LDA $8E
	CLC
	ADC #$02
	STA $8E
	LDA $8F
	ADC #$00
	STA $8F
	INC $90
	LDA $90
	CMP #$1C
	BCC @Loop1
	JMP L_17_A81E

L_17_A877:
	JSR L_17_A9C4
	LDA $6E
	STA $3F
	LDA #$FF
	STA $3E
	LDX $3F
	LDA HELMET_SHELLS,X
	LDY #$C4
	LDX #$C4
	JSR L_17_A8F4
	JMP L_D286

L_17_A891:
	JSR L_17_A9C4
	LDA $6D
	STA $3F
	LDA #$FF
	STA $3E
	LDX $3F
	LDA HELMET_SHELLS,X
	CLC
	ADC #$08
	LDY #$24
	LDX #$C4
	JSR L_17_A8F4
	LDA #$80
	STA PRG_RAM_PROTECT
	LDY #$80
@Loop1:
	LDA $0200,Y
	STA $5F83,Y
	INY
	BNE @Loop1
	LDA #$C0
	STA PRG_RAM_PROTECT
	LDA $6C
	STA $3F
	LDA #$00
	STA $3E
	LDX $3F
	LDA HELMET_SHELLS,X
	CLC
	ADC #$04
	LDY #$B4
	LDX #$C4
	JSR L_17_A8F4
	LDA #$80
	STA PRG_RAM_PROTECT
	LDY #$80
@Loop2:
	LDA $5F83,Y
	STA $0200,Y
	INY
	BNE @Loop2
	LDA #$C0
	STA PRG_RAM_PROTECT
	LDY #<L_17_BBA3
	LDX #>L_17_BBA3
	JSR L_C481
	RTS

L_17_A8F4:
	STY $42
	STX $43
	JSR L_C3C7
	LDX $3F
	LDA HELMET_DECALS,X
	STA $C5
	LDA #$4F
	STA $C6
	LDA #$02
	STA $C4
	JSR L_C3E3
	LDA #$03
	JSR switch_thread
	LDX #$16
	JSR L_CCDD
	LDA $3E
	BPL @Loop4
	LDX #$00
@Loop1:
	LDA $0200,X
	CMP #$F0
	BCS @Loop2
	CLC
	ADC $42
	STA $0280,X
	LDA $0203,X
	CLC
	ADC $43
	STA $0283,X
	LDA $0201,X
	ORA #$80
	STA $0281,X
	LDA $0202,X
	ORA #$02
	STA $0282,X
@Loop2:
	INX
	INX
	INX
	INX
	CPX #$80
	BCC @Loop1
	LDA #$F1
	LDY #$80
@Loop3:
	STA $0180,Y
	INY
	BNE @Loop3
	LDA $4B
	STA $4D
	LDA $4C
	STA $4E
	JMP @Loop7
@Loop4:
	LDX #$00
@Loop5:
	LDA $0200,X
	CMP #$F0
	BCS @Loop6
	CLC
	ADC $42
	STA $0200,X
	LDA $0203,X
	CLC
	ADC $43
	STA $0203,X
@Loop6:
	INX
	INX
	INX
	INX
	CPX #$80
	BCC @Loop5
@Loop7:
	LDY #$00
	LDA $3E
	BPL @Loop8
	LDY #$08
@Loop8:
	LDA $3F
	ASL
	ASL
	ASL
	TAX
	LDA HELMET_COLORS,X
	STA $031F,Y
	LDA HELMET_COLORS+1,X
	STA $0320,Y
	LDA HELMET_COLORS+2,X
	STA $0321,Y
	LDA HELMET_COLORS+3,X
	STA $032C,Y
	LDA HELMET_COLORS+4,X
	STA $032D,Y
	LDA HELMET_COLORS+5,X
	STA $032F,Y
	LDA HELMET_COLORS+6,X
	STA $0330,Y
	LDA HELMET_COLORS+7,X
	STA $0331,Y
	LDA #$0F
	STA $032B,Y
	RTS

L_17_A9C4:
	LDA #$2C
	STA $50
	LDA #$2E
	STA $51
	JSR L_D236
	JMP L_D23A

L_17_A9D2:
	LDA #$00
	STA $E1
	STA $E2
	LDY #<TEAM_SELECT_ARROW
	LDX #>TEAM_SELECT_ARROW
	LDA #$02
	JSR set_xymenu_arrow
	LDA #$2F ; Arrow Right Side
	STA $0205
	LDA #$02
	STA $0206
	JSR L_17_AC4E
@Loop1:
	LDA #$01
	JSR switch_thread
	JSR xymenu_move
	JSR xymenu_set_xy
	JSR L_17_AC44
	BIT $3A
	BVS @Loop2
	BPL @Loop1
	JSR L_17_AC4E
	LDA #$08
	JSR switch_thread
	JSR xymenu_get_spot
	JSR L_17_ABFE
	STA $6C
	CLC
	RTS
@Loop2:
	SEC
	RTS

L_17_AA16:
	LDY #$F8
@Loop1:
	LDA $0108,Y
	STA $0110,Y
	INY
	BNE @Loop1
	LDA #$00
	STA $E1
	STA $E2
	LDA $6C
	BNE @Loop2
	INC $E1
@Loop2:
	LDY #<TEAM_SELECT_ARROW
	LDX #>TEAM_SELECT_ARROW
	LDA #$02
	JSR set_xymenu_arrow
	LDA #$2C
	STA $0201
	LDA #$2D
	STA $0205
	LDA #$02
	STA $0206
	JSR L_17_AC4E
@Loop3:
	LDA #$01
	JSR switch_thread
	JSR xymenu_move
	JSR xymenu_get_spot
	JSR L_17_ABFE
	CMP $6C
	BNE @Loop4
	JSR L_17_ACB7
@Loop4:
	JSR xymenu_set_xy
	JSR L_17_AC44
	BIT $3A
	BVS @Loop5
	BPL @Loop3
	JSR L_17_AC4E
	LDA #$08
	JSR switch_thread
	JSR xymenu_get_spot
	JSR L_17_ABFE
	STA $6D
	CLC
	RTS
@Loop5:
	SEC
	RTS

L_17_AA7D:
	LDA #$00
	STA $E1
	STA $E2
	LDY #<TEAM_SELECT_ARROW
	LDX #>TEAM_SELECT_ARROW
	LDA #$00
	JSR set_xymenu_arrow
	LDA #$2F
	STA $0205
	LDA #$02
	STA $0206
	JSR L_17_AC4E
	LDA #$FF
	STA $6C
	STA $6D
	LDY #$F8
@Loop1:
	LDA L_17_BEC1-$F8,Y
	STA $0110,Y
	INY
	BNE @Loop1
	LDY #$FA
@Loop2:
	LDA $FFE7,Y
	STA $FFED,Y
	INY
	BNE @Loop2
	LDA #$01
	STA $E7
	STA $EB
@Loop3:
	LDA #$01
	JSR switch_thread
	LDA $6C
	BPL @Loop4
	JSR xymenu_move
	JSR L_17_ACAB
	JSR xymenu_set_xy
	JSR L_17_AC44
	BIT $38
	BPL @Loop4
	JSR L_17_AC4E
	JSR xymenu_get_spot
	JSR L_17_ABFE
	STA $6C
@Loop4:
	LDA $6D
	BPL @Loop6
	JSR L_17_AB1F
	JSR xymenu_move
	JSR L_17_ACAB
	LDA #$2C
	STA $0201
	JSR xymenu_set_xy
	JSR L_17_AC44
	BIT $39
	BPL @Loop5
	JSR L_17_AC4E
	JSR xymenu_get_spot
	JSR L_17_ABFE
	STA $6D
@Loop5:
	JSR L_17_AB1F
@Loop6:
	BIT $3A
	BVS @Loop8
	LDA $6C
	ORA $6D
	BPL @Loop7
	JMP @Loop3
@Loop7:
	LDA #$3C
	JSR switch_thread
	CLC
	RTS
@Loop8:
	SEC
	RTS

L_17_AB1F:
	LDY #$F8
@Loop1:
	LDX $0108,Y
	LDA $0110,Y
	STA $0108,Y
	TXA
	STA $0110,Y
	INY
	BNE @Loop1
	LDY #$FA
@Loop2:
	LDX $FFE7,Y
	LDA $FFED,Y
	STA $FFE7,Y
	TXA
	STA $FFED,Y
	INY
	BNE @Loop2
	RTS

L_17_AB44:
	LDA #$0F
	STA $4B
	LDA #$02
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDY #<MINI_HELMETS_TEAM_CONTROL
	LDX #>MINI_HELMETS_TEAM_CONTROL
	JSR L_17_A83D
	LDA #$14
	LDX #$23
	JSR L_D1D5
	RTS

L_17_AB5E:
	LDA #$00
	STA $45
@Loop1:
	LDA #$01
	JSR switch_thread
	BIT $3A
	BMI @Loop3
	BVS @Loop6
	LDA $3A
	LSR
	BCS @Loop2
	LSR
	BCC @Loop1
	LDY #$00
	LDX #$00
	JSR L_17_ABC9
	LDY #$04
	LDX #$02
	JSR L_17_ABC9
	LDA #$00
	STA $45
	JMP @Loop1
@Loop2:
	LDY #$00
	LDX #$02
	JSR L_17_ABC9
	LDY #$04
	LDX #$00
	JSR L_17_ABC9
	LDA #$FF
	STA $45
	JMP @Loop1
@Loop3:
	LDA $45
	BMI @Loop4
	LDY #$02
	LDX #$02
	JSR L_17_ABC9
	LDX #$1C
	LDY #$1D
	JMP @Loop5
@Loop4:
	LDY #$02
	LDX #$00
	JSR L_17_ABC9
	LDX #$1D
	LDY #$1C
@Loop5:
	STX $6C
	STY $6D
	LDA #$3C
	JSR switch_thread
	CLC
	RTS
@Loop6:
	SEC
	RTS

L_17_ABC9:
	LDA @Loop1,Y
	STA $3E
	LDA @Loop1+1,Y
	STA $3F
	LDA @Loop5,X
	TAY
	LDA @Loop5+1,X
	TAX
	JMP L_CCFC
@Loop1:	.WORD @Loop2, @Loop3, @Loop4
@Loop2:	.BYTE $03, $31, $20, $50, $FF
@Loop3:	.BYTE $03, $32, $20, $50, $FF
@Loop4:	.BYTE $03, $20, $20, $20, $FF
@Loop5:	.WORD $2269, $2274

L_17_ABF7:
	LDA #$18
	LDX #$0F ; BANK16
	JMP L_C3A2

L_17_ABFE:
	TAX
	LDA @Loop1,X
	RTS
@Loop1:	.BYTE $00, $05, $09, $01, $06, $0A, $02, $07, $0B, $03, $08, $0C, $04, $00, $0D
		.BYTE $0E, $13, $18, $0F, $14, $19, $10, $15, $1A, $11, $16, $1B, $12, $17, $00

L_17_AC21:
	TAX
	LDA @Loop1,X
	RTS
@Loop1:	.BYTE $00, $05, $09, $01, $06, $0A, $02, $07, $0B, $03, $08, $0C, $04, $00, $0D
		.BYTE $0E, $13, $00, $0F, $14, $18, $10, $15, $19, $11, $16, $1A, $12, $17, $1B

L_17_AC44:
	LDA $E6
	BNE L_17_AC4E
	LDA $30
	AND #$04
	BEQ L_17_AC5B
L_17_AC4E:
	JSR xymenu_get_spot
	ASL
	CLC
	ADC #$04
	TAY
	LDA ($E3),Y
	JMP L_17_AC5D
L_17_AC5B:
	LDA #$F0
L_17_AC5D:
	STA $0200
	STA $0204
	LDA $0203
	CLC
	ADC #$08
	STA $0207
	RTS

L_17_AC6D:
	LDX $E5
	LDA $38,X
	AND #$02
	BEQ @Loop1
	LDA $E2
	BEQ @Loop1
	DEC $E2
	JMP @Loop2
@Loop1:
	LDA $38,X
	LSR
	BCC @Loop4
	LDA $E2
	CMP $ED
	BCS @Loop4
	INC $E2
@Loop2:
	LDA $E2
	ASL
	TAX
	LDA A:$E7,X
	STA $E3
	LDA A:$E8,X
	STA $E4
	LDA $E1
	LDY #$03
	CMP ($E3),Y
	BCC @Loop3
	LDA ($E3),Y
	STA $E1
	DEC $E1
@Loop3:
	JMP L_D690
@Loop4:
	RTS

L_17_ACAB:
	LDA $E2
	CMP $E8
	BNE L_17_ACC7
	LDA $E1
	CMP $E7
	BNE L_17_ACC7
L_17_ACB7:
	LDY $E5
	LDA $0035,Y
	AND #$08
	BEQ @Loop2
	DEC $E1
	JMP L_17_ACC7
@Loop2:
	INC $E1
L_17_ACC7:
	LDA $E1
	BPL @Loop4
	LDY #$02
	LDA ($E3),Y
	SEC
	SBC #$01
	STA $E1
@Loop4:
	LDA $E1
	LDY #$02
	CMP ($E3),Y
	BCC @Loop5
	LDA #$00
	STA $E1
@Loop5:
	JSR xymenu_get_spot
	ASL
	CLC
	ADC #$04
	TAY
	LDA ($E3),Y
	CMP #$FF
	BEQ L_17_ACB7
	RTS

L_17_ACEF:
	STA $44
	LDA #$0F
	STA $4B
	LDA #$1D
	STA $4C
	LDA #$40
	STA $42
	LDY #$08
	LDX #$00
@Loop1:
	LDA #$00
	STA $43
@Loop2:
	LDA NFL_SHIELD,X
	BMI @Loop3
	LDA $42
	STA $0200,Y
	LDA NFL_SHIELD+1,X
	STA $0201,Y
	LDA NFL_SHIELD,X
	STA $0202,Y
	LDA $43
	CLC
	ADC $44
	STA $0203,Y
	INY
	INY
	INY
	INY
@Loop3:
	INX
	INX
	LDA $43
	CLC
	ADC #$08
	STA $43
	CMP #$38
	BCC @Loop2
	LDA $42
	CLC
	ADC #$08
	STA $42
	CPX #$8C
	BCC @Loop1
	RTS

L_17_AD40:
	LDY #$00
	LDX #$00
@Loop1:
	LDA PLAYBOOK_FLASH_CONTROLLER,Y
	STA $0211,X
	LDA #$00
	STA $0212,X
	INX
	INX
	INX
	INX
	INY
	CPY #$08
	BCC @Loop1
	RTS

L_17_AD59:
	LDX $E1
	LDA @Loop1,X
	STA $0210
	STA $0214
	STA $0218
	STA $021C
	CLC
	ADC #$08
	STA $0220
	STA $0224
	STA $0228
	STA $022C
	LDX $E2
	LDA @Loop2,X
	STA $0213
	STA $0223
	CLC
	ADC #$08
	STA $0217
	STA $0227
	CLC
	ADC #$08
	STA $021B
	STA $022B
	CLC
	ADC #$08
	STA $021F
	STA $022F
	RTS
@Loop1:	.BYTE $70, $C0
@Loop2:	.BYTE $20, $58, $90, $C8

L_17_ADA6:
	LDY #<L_17_BB85
	LDX #>L_17_BB85
	JSR L_C481
	LDA #$16
	STA $88
	STA $89
	STA $0680
	LDA $3D
	AND #$01
	CLC
	ADC #$2C
	STA $45
	LDX #$07 ; BANK8
	JSR L_17_B472
	BCS @Loop1
	RTS
@Loop1:
	LDA $3D
	AND #$20
	BEQ @Loop2
	LDA $2D
	AND #$EF
	STA $2D
	RTS
@Loop2:
	LDA $2D
	ORA #$10
	STA $2D
	RTS

L_17_ADDB:
	LDY #<L_17_BB85
	LDX #>L_17_BB85
	JSR L_C481
	LDA #$16
	STA $88
	STA $89
	STA $0680
	LDA $3D
	AND #$08
	BEQ @Loop1
	LDA #$00
	STA $70
	STA $72
	LDA #$31
	LDX #$07 ; BANK8
	JMP L_17_B472
@Loop1:
	LDA #$83
	STA $70
	LDA #$01
	STA $72
	LDA #$32
	LDX #$07 ; BANK8
	JMP L_17_B472

L_17_AE0D:
	LDA $2D
	AND #$03
	CMP #$03
	BNE @Loop1
	LDA $6758
	CMP #$11
	BNE @Loop1
	LDA $6759
	CMP #$0A
	BEQ @Loop2
@Loop1:
	JSR L_D8F7
	AND #$03
	CLC
	ADC #$59
	LDX #$06 ; BANK7
	JMP L_17_B472
@Loop2:
	LDA #$58
	LDX #$06 ; BANK7
	JMP L_17_B472

L_17_AE37:
	LDA $6758
	CMP #$09
	BCC @Loop1
	LDA #$00
	JSR L_17_AE5D
	LDA #$01
	JSR L_17_AE5D
	LDA #$02
	JSR L_17_AE5D
	LDA #$03
	JSR L_17_AE5D
	LDA #$04
	JSR L_17_AE5D
	LDA #$05
	JSR L_17_AE5D
@Loop1:
	RTS

L_17_AE5D:
	TAY
	LDX $67A2,Y
	BMI @Loop1
	RTS
@Loop1:
	STA $8E
	ASL
	TAY
	LDA DIVISIONS_LIST,Y
	STA $8F
	STA $90
	LDA DIVISIONS_LIST+1,Y
	STA $91
	STA $92
	LDA #$00
	STA $93
@Loop2:
	LDA $8F
	JSR L_DEDE
	LDY #$B3
	LDA ($3E),Y
	STA $44
	LDY #$B2
	CLC
	ADC ($3E),Y
	LDY #$B4
	CLC
	ADC ($3E),Y
	STA $45
	LDA #$10
	SEC
	SBC $45
	LDY #$B2
	CLC
	ADC ($3E),Y
	STA $45
	JSR L_17_B41B
	LDX $93
	STA $9E,X
	LDA $8F
	STA $9F,X
	INC $93
	INC $93
	INC $8F
	DEC $91
	BNE @Loop2
	LDA $92
	STA $91
@Loop3:
	LDA $90
	JSR L_DEDE
	LDY #$B2
	LDA ($3E),Y
	STA $45
	LDY #$B4
	CLC
	ADC ($3E),Y
	LDY #$B3
	CLC
	ADC ($3E),Y
	STA $44
	LDA #$10
	SEC
	SBC $44
	CLC
	ADC ($3E),Y
	STA $44
	JSR L_17_B41B
	STA $44
	LDY $91
	LDX #$00
@Loop4:
	LDA $90
	CMP $9F,X
	BEQ @Loop5
	LDA $9E,X
	CMP $44
	BCS @Loop6
@Loop5:
	INX
	INX
	DEY
	BNE @Loop4
	LDA #$80
	STA PRG_RAM_PROTECT
	LDX $8E
	LDA $90
	STA $67A2,X
	STA $6E
	JSR store_sram_checksum
	LDA #$C0
	STA PRG_RAM_PROTECT
	LDA #$56
	LDX #$06 ; BANK7
	JSR L_C3A2
	JSR L_17_B489
@Loop6:
	INC $90
	DEC $92
	BNE @Loop3
	RTS

L_17_AF18:
	JSR L_D28B
	LDA #$00
	STA $57
	STA $58
	LDA $E1
	ASL
	CLC
	ADC $E1
	CLC
	ADC $E2
L_17_AF2A:
	STA $45
	CLC
	ADC #$2A
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDA $45
	ASL
	TAY
	LDA DIVISIONS_LIST,Y
	LDX DIVISIONS_LIST+1,Y
	STX $90
	JSR L_17_B3EC
	LDA $90
	STA $8F
	DEC $8F
@Loop1:
	LDA $8F
	STA $8E
	LDX #$00
@Loop2:
	LDA $96,X
	CMP $98,X
	BCC @Loop5
	BNE @Loop6
	JSR L_17_B152
	BNE @Loop4
	LDY #$B5
	LDA ($40),Y
	CMP ($3E),Y
	INY
	LDA ($40),Y
	SBC ($3E),Y
	BCC @Loop3
	LDA $99,X
	ORA #$80
	STA $99,X
	JMP @Loop6
@Loop3:
	LDA $97,X
	ORA #$80
	STA $97,X
	JMP @Loop5
@Loop4:
	BCS @Loop6
@Loop5:
	JSR L_17_B1B8
@Loop6:
	INX
	INX
	DEC $8E
	BNE @Loop2
	DEC $8F
	BNE @Loop1
	JSR L_17_A674
	LDA #$00
	STA $8E
	LDA $97
	LDX #$00
	JSR L_17_AFCC
	LDA $99
	LDX #$01
	JSR L_17_AFCC
	LDA $9B
	LDX #$02
	JSR L_17_AFCC
	LDA $9D
	LDX #$03
	JSR L_17_AFCC
	LDA $90
	CMP #$04
	BEQ @Loop7
	LDA $9F
	LDX #$04
	JSR L_17_AFCC
@Loop7:
	JSR L_17_A81E
	LDA #$01
	JSR switch_thread
	LDA $90
	CLC
	ADC #$2C
	LDX #$0F ; BANK16
	JMP L_C3A2

L_17_AFCC:
	STA $91
	AND #$1F
	STA $45
	STX $8F
	LDA L_17_B1CB,X
	LDY #$20
	LDX #$00
	JSR L_17_A6BC
	LDA $8F
	ASL
	TAX
	LDA L_17_B1D0,X
	STA $94
	LDA L_17_B1D1,X
	STA $95
	LDX $8E
	LDA $91
	BMI @Loop1
	INX
	STX $8E
@Loop1:
	LDA #$20
	JSR L_17_B148
	LDA #$01
	JSR buffer_add
	LDA $8E
	AND #$0F
	CLC
	ADC #$30
	STA $033A,X
	INX
	JSR buffer_end
	LDA #$42
	JSR L_17_B148
	LDA $91
	JSR L_CF61
	LDA $91
	JSR L_DEDE
	LDA $3E
	STA $92
	LDA $3F
	STA $93
	LDY #$B2
	LDA ($92),Y
	LDY #$B3
	ORA ($92),Y
	LDY #$B4
	ORA ($92),Y
	BNE @Loop2
	JMP @Loop6
@Loop2:
	LDY #$B2
	LDA ($92),Y
	JSR L_D8B7
	LDA #$26
	JSR L_17_B148
	LDA $44
	JSR L_D5A0
	LDY #$B3
	LDA ($92),Y
	JSR L_D8B7
	LDA #$29
	JSR L_17_B148
	LDA $44
	JSR L_D5A0
	LDY #$B4
	LDA ($92),Y
	JSR L_D8B7
	LDA #$2C
	JSR L_17_B148
	LDA $44
	JSR L_D5A0
	LDY #$B5
	LDA ($92),Y
	STA $44
	INY
	LDA ($92),Y
	STA $45
	JSR L_D88A
	LDA $40
	STA $44
	LDA $41
	STA $45
	LDA #$34
	JSR L_17_B148
	JSR L_D5DB
	LDY #$B7
	LDA ($92),Y
	STA $44
	INY
	LDA ($92),Y
	STA $45
	JSR L_D88A
	LDA $40
	STA $44
	LDA $41
	STA $45
	LDA #$38
	JSR L_17_B148
	JSR L_D5DB
	LDY #$B2
	LDA ($92),Y
	LDY #$E8
	LDX #$03
	JSR L_D7BE
	LDY #$B2
	LDA ($92),Y
	LDY #$B3
	CLC
	ADC ($92),Y
	STA $40
	LDA #$00
	ADC #$00
	STA $41
	JSR L_D85E
	LDA $44
	STA $45
	LDA $43
	STA $44
	JSR L_D88A
	LDA #$2F
	JSR L_17_B148
	LDA #$05
	JSR buffer_add
	CLC
	LDA $41
	JSR L_D5F8
	LDA #$2E
	STA $033A,X
	INX
	SEC
	LDA $41
	JSR L_D605
	LDA $40
	JSR L_D5F8
	LDA $40
	JSR L_D605
	JSR buffer_end
	LDA $91
	AND #$7F
	LDX #$00
@Loop3:
	CMP $67A2,X
	BEQ @Loop4
	INX
	CPX #$0C
	BCC @Loop3
	RTS
@Loop4:
	LDA #$19
	CPX #$06
	BCC @Loop5
	LDA #$5F
@Loop5:
	STA $45
	LDA #$00
	JSR L_17_B148
	LDA #$01
	STA $3E
	STA $3F
	LDA $45
	JMP L_D09D
@Loop6:
	LDA #$27
	JSR L_17_B148
	LDA #<@Loop7
	STA $3E
	LDA #>@Loop7
	STA $3F
	JMP L_CCFC
@Loop7:
	.BYTE $14
	.BYTE $3B
	.BYTE $20
	.BYTE $20
	.BYTE $3B
	.BYTE $20
	.BYTE $20
	.BYTE $3B
	.BYTE $20
	.BYTE $20
	.BYTE $20
	.BYTE $3B
	.BYTE $20
	.BYTE $20
	.BYTE $20
	.BYTE $20
	.BYTE $3B
	.BYTE $20
	.BYTE $20
	.BYTE $20
	.BYTE $3B
	.BYTE $FF

L_17_B148:
	CLC
	ADC $94
	TAY
	LDA $95
	ADC #$00
	TAX
	RTS

L_17_B152:
	LDA $97,X
	JSR L_DEDE
	LDA $3E
	STA $40
	LDA $3F
	STA $41
	LDA $99,X
	JSR L_DEDE
	LDY #$B5
	LDA ($40),Y
	LDY #$B7
	SEC
	SBC ($40),Y
	STA $44
	LDY #$B6
	LDA ($40),Y
	LDY #$B8
	SBC ($40),Y
	STA $45
	LDA $44
	CLC
	ADC #$00
	STA $44
	LDA $45
	ADC #$80
	STA $45
	LDY #$B5
	LDA ($3E),Y
	LDY #$B7
	SEC
	SBC ($3E),Y
	STA $42
	LDY #$B6
	LDA ($3E),Y
	LDY #$B8
	SBC ($3E),Y
	STA $43
	LDA $42
	CLC
	ADC #$00
	STA $42
	LDA $43
	ADC #$80
	STA $43
	LDA $44
	SEC
	SBC $42
	STA $44
	LDA $45
	SBC $43
	STA $45
	ORA $44
	RTS

L_17_B1B8:
	LDA $96,X
	LDY $98,X
	STA $98,X
	TYA
	STA $96,X
	LDA $97,X
	LDY $99,X
	STA $99,X
	TYA
	STA $97,X
	RTS

L_17_B1CB:
	.BYTE $40
	.BYTE $60
	.BYTE $80
	.BYTE $A0
	.BYTE $C0
L_17_B1D0:	.BYTE $02
L_17_B1D1:	.BYTE $21
	.BYTE $82
	.BYTE $21
	.BYTE $02
	.BYTE $22
	.BYTE $82
	.BYTE $22
	.BYTE $02
	.BYTE $23

L_17_B1DA:
	LDA #$00
	JSR L_17_B2A4
	LDA #$01
	JSR L_17_B2A4
	LDA #$02
	JSR L_17_B2A4
	LDA #$03
	JSR L_17_B2A4
	LDA #$04
	JSR L_17_B2A4
	LDA #$05
	JSR L_17_B2A4
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA $67A2
	STA $97
	JSR L_17_B40C
	STA $96
	LDA $67A3
	STA $99
	JSR L_17_B40C
	STA $98
	LDA $67A4
	STA $9B
	JSR L_17_B40C
	STA $9A
	LDX #$03
	JSR L_17_B30C
	LDA $97
	STA $678E
	LDA $99
	STA $6786
	LDA $9B
	STA $677E
	LDA $67A5
	STA $97
	JSR L_17_B40C
	STA $96
	LDA $67A6
	STA $99
	JSR L_17_B40C
	STA $98
	LDA $67A7
	STA $9B
	JSR L_17_B40C
	STA $9A
	LDX #$03
	JSR L_17_B30C
	LDA $97
	STA $6792
	LDA $99
	STA $678A
	LDA $9B
	STA $6782
	LDA #$00
	JSR L_17_B2DF
	LDA $97
	STA $6776
	STA $67A8
	LDA $99
	STA $6777
	STA $67A9
	LDA $9B
	STA $677F
	STA $67AA
	LDA #$0E
	JSR L_17_B2DF
	LDA $97
	STA $677A
	STA $67AB
	LDA $99
	STA $677B
	STA $67AC
	LDA $9B
	STA $6783
	STA $67AD
	JSR store_sram_checksum
	LDA #$C0
	STA PRG_RAM_PROTECT
	RTS

L_17_B2A4:
	TAY
	LDX $67A2,Y
	BPL @Loop1
	STY $92
	ASL
	TAY
	LDA DIVISIONS_LIST,Y
	LDX DIVISIONS_LIST+1,Y
	STX $90
	JSR L_17_B3EC
	LDX $90
	JSR L_17_B30C
	LDA #$80
	STA PRG_RAM_PROTECT
	LDX $92
	LDA $97
	STA $67A2,X
	STA $6E
	JSR store_sram_checksum
	LDA #$C0
	STA PRG_RAM_PROTECT
	LDA #$56
	LDX #$06 ; BANK7
	JSR L_C3A2
	JMP L_17_B489
@Loop1:
	RTS

L_17_B2DF:
	STA $8E
	LDA #$0E
	STA $8F
	LDA #$00
	STA $91
@Loop1:
	LDA $8E
	LDX #$06
@Loop2:
	CMP $67A1,X
	BEQ @Loop3
	DEX
	BNE @Loop2
	JSR L_17_B40C
	LDX $91
	STA $96,X
	LDA $8E
	STA $97,X
	INC $91
	INC $91
@Loop3:
	INC $8E
	DEC $8F
	BNE @Loop1
	LDX #$0B
L_17_B30C:
	DEX
	STX $8F
@Loop1:
	LDA $8F
	STA $8E
	LDX #$00
@Loop2:
	LDA $96,X
	CMP $98,X
	BCC @Loop4
	BNE @Loop5
	JSR L_17_B152
	BNE @Loop3
	LDY #$B5
	LDA ($40),Y
	CMP ($3E),Y
	STA $44
	INY
	LDA ($40),Y
	SBC ($3E),Y
	ORA $44
	BNE @Loop3
	LDA $3D
	AND #$04
	BEQ @Loop5
	JMP @Loop4
@Loop3:
	BCS @Loop5
@Loop4:
	JSR L_17_B1B8
@Loop5:
	INX
	INX
	DEC $8E
	BNE @Loop2
	DEC $8F
	BNE @Loop1
	RTS

L_17_B34C:
	JSR L_D28B
	LDA $6758
	CMP #$11
	BCS @Loop1
	LDA #$10
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDA #$14
	LDX #$23
	JSR L_D1D5
	JMP @Loop2
@Loop1:
	LDA #$11
	LDX #$0F ; BANK16
	JSR L_C3A2
	JSR L_17_B4B3
@Loop2:
	LDA #$01
	JSR switch_thread
	BIT $3A
	BVS @Loop4
	LDA $37
	AND #$01
	BEQ @Loop2
	LDA #$04
	JSR L_17_B39D
@Loop3:
	LDA #$01
	JSR switch_thread
	BIT $3A
	BVS @Loop4
	LDA $37
	AND #$02
	BEQ @Loop3
	LDA #$FC
	JSR L_17_B39D
	JMP @Loop2
@Loop4:
	RTS

L_17_B39D:
	LDX #$40
L_17_B39F:
	STX $94
	STA $8F
@Loop1:
	LDA #$01
	JSR switch_thread
	LDA $8F
	CLC
	ADC $0307
	STA $0307
	LDA $8F
	AND #$80
	BPL @Loop2
	LDA #$FF
@Loop2:
	ADC $0308
	AND #$01
	STA $0308
	LDA $8F
	EOR #$FF
	CLC
	ADC #$01
	TAX
	CLC
	ADC $92
	STA $92
	TXA
	AND #$80
	BPL @Loop3
	LDA #$FF
@Loop3:
	ADC $93
	STA $93
	LDA $6758
	CMP #$11
	BCC @Loop4
	LDA #$10
	STA $B8
	JSR L_17_B4EE
@Loop4:
	DEC $94
	BNE @Loop1
	RTS

L_17_B3EC:
	STA $8E
	STX $8F
	LDA #$00
	STA $91
@Loop1:
	LDA $8E
	JSR L_17_B40C
	LDX $91
	STA $96,X
	LDA $8E
	STA $97,X
	INC $8E
	INC $91
	INC $91
	DEC $8F
	BNE @Loop1
	RTS

L_17_B40C:
	JSR L_DEDE
	LDY #$B2
	LDA ($3E),Y
	STA $45
	LDY #$B3
	LDA ($3E),Y
	STA $44
L_17_B41B:
	LDA $45
	CLC
	ADC $44
	BEQ @Loop2
	STA $42
	LDA #$00
	STA $44
	STA $43
	JSR L_D832
	LDA $45
	BNE @Loop1
	LDA $44
	RTS
@Loop1:
	LDA #$FF
	RTS
@Loop2:
	LDA #$01
	RTS

L_17_B43A:
	TAX
	AND #$F0
	LSR
	STA $45
	LSR
	LSR
	CLC
	ADC $45
	STA $45
	TXA
	AND #$0F
	CLC
	ADC $45
	RTS

L_17_B44E:
	LDA #$80
	STA PRG_RAM_PROTECT
	LDA $3B
	CLC
	ADC $6403
	STA $6403
	LDA $3C
	ADC $6404
	STA $6404
	LDA $3D
	ADC $6405
	STA $6405
	LDA #$C0
	STA PRG_RAM_PROTECT
	RTS

L_17_B472:
	JSR L_C390
@Loop1:
	LDA #$01
	JSR switch_thread
	LDA $0C
	BEQ @Loop2
	BIT $3A
	BVC @Loop1
	JSR L_17_94E2
	SEC
	RTS
@Loop2:
	CLC
	RTS

L_17_B489:
	JSR L_D28B
	LDA #$00
	STA $0307
	STA $0308
	STA $030B
	JSR L_D10E
	JMP clear_sprites

L_17_B49D:
	LDA #$01
	JSR switch_thread
	BIT $3A
	BVS @Loop1
	DEX
	BNE L_17_B49D
	JSR L_D194
	RTS
@Loop1:
	JSR L_17_94F4
	JMP L_17_B489

L_17_B4B3:
	LDA #$00
	STA $92
	STA $93
	JSR L_17_A674
	LDA #$00
	STA $8E
	STA $90
@Loop1:
	JSR L_17_B516
	JSR L_17_A6BC
	LDA $8E
	CMP #$18
	BCC @Loop1
	LDA $6759
	BEQ @Loop3
	STA $8E
@Loop2:
	JSR L_17_B541
	BCS @Loop3
	JSR L_17_A6BC
	LDA $90
	DEC $8E
	BNE @Loop2
@Loop3:
	JSR L_17_A81E
	LDA #$14
	LDX #$23
	JSR L_D1D5
	RTS

L_17_B4EE:
	LDA #$00
	STA $8E
	STA $90
@Loop1:
	JSR L_17_B516
	JSR L_17_A7B2
	LDA $8E
	CMP #$18
	BCC @Loop1
	LDA $6759
	BEQ @Loop3
	STA $8E
@Loop2:
	JSR L_17_B541
	BCS @Loop3
	JSR L_17_A7B2
	LDA $90
	DEC $8E
	BNE @Loop2
@Loop3:
	RTS

L_17_B516:
	LDX $8E
	LDY PLAYOFF_HELMETS,X
	LDA $6776,Y
	STA $45
	LDA PLAYOFF_HELMETS+1,X
	PHA
	CPX #$0C
	BCS @Loop1
	LDA #$10
	LDX #$00
	JMP @Loop2
@Loop1:
	LDA #$E0
	LDX #$01
@Loop2:
	CLC
	ADC $92
	TAY
	TXA
	ADC $93
	TAX
	PLA
	INC $8E
	INC $8E
	RTS

L_17_B541:
	LDX $90
	LDY PLAYOFF_HELMET_WINNERS,X
	BMI @Loop2
	LDA $6778,Y
	CMP $6779,Y
	BCS @Loop1
	INY
@Loop1:
	LDA $6776,Y
	STA $45
	LDA PLAYOFF_HELMET_WINNERS+1,X
	PHA
	LDA PLAYOFF_HELMET_WINNERS+2,X
	CLC
	ADC $92
	TAY
	LDA PLAYOFF_HELMET_WINNERS+3,X
	ADC $93
	TAX
	LDA $90
	CLC
	ADC #$04
	STA $90
	PLA
	CLC
	RTS
@Loop2:
	SEC
	RTS

L_17_B573:
	LDA $E1
	ASL
	CLC
	ADC $E1
	STA $AA
	CLC
	ADC $E2
	STA $8E
	CLC
	ADC #$3A
	LDX #$0F ; BANK16
	JSR L_C3A2
	LDY #$FC
@Loop1:
	LDA RANKINGS_POINTER_START-$FC,Y
	STA $0104,Y
	INY
	BNE @Loop1
	LDA #$14
	LDX #$23
	JSR L_D1D5
	LDA $8E
	ASL
	ASL
	TAX
	LDA L_17_B96C,X
	STA $A8
	STA $A7
	LDA L_17_B96C+1,X
	STA $A9
	LDY L_17_B96C+2,X
	LDA L_17_B96C+3,X
	TAX
	JSR L_17_B63F
	JSR L_17_B6FE
	LDA #$00
	STA $AB
@Loop2:
	LDA #$01
	JSR switch_thread
	BIT $3A
	BVS L_17_B63E
	LDA $3A
	LSR
	BCS @Loop6
	LSR
	BCS @Loop5
	LSR
	BCS @Loop3
	LSR
	BCC @Loop2
	LDA $A7
	CMP $A8
	BEQ @Loop2
	SEC
	SBC #$0B
	JMP @Loop4
@Loop3:
	LDA $A7
	CLC
	ADC #$0B
	CMP $A9
	BCS @Loop2
@Loop4:
	STA $A7
	JSR L_17_B633
	JSR L_17_B6FE
	JMP @Loop2
@Loop5:
	DEC $AB
	BPL @Loop7
	LDA #$00
	STA $AB
	JMP @Loop2
@Loop6:
	INC $AB
	LDA $AB
	CMP #$03
	BCC @Loop7
	LDA #$02
	STA $AB
	JMP @Loop2
@Loop7:
	LDA $A8
	STA $A7
	LDX $AB
	LDA RANKINGS_POINTER_MOVE,X
	STA $0203
	LDA $AA
	CLC
	ADC $AB
	ASL
	TAX
	LDY L_17_B984,X
	LDA L_17_B984+1,X
	TAX
	JSR L_17_B63F
	JSR L_17_B633
	JSR L_17_B6FE
	JMP @Loop2

L_17_B633:
	LDA #$F1
	LDY #$10
@Loop1:
	STA $0200,Y
	INY
	BNE @Loop1
	RTS

L_17_B63E:
	RTS

L_17_B63F:
	STY $94
	STX $95
	LDA $A7
	STA $91
	LDA #$00
	LDY #$90
@Loop1:
	STA $030F,Y
	INY
	BNE @Loop1
	LDA #$00
	STA $92
@Loop2:
	LDA $91
	STA $6E
	LDA #>@Loop3
	PHA
	LDA #<@Loop3-1
	PHA
	JMP ($0094)
@Loop3:
	LDA $92
	ASL
	ASL
	TAX
	LDA $8E
	STA $03A1,X
	LDA $8F
	STA $03A2,X
	LDA $91
	STA $03A0,X
	INC $91
	INC $92
	CMP $A9
	BCC @Loop2
	LDA $A9
	SEC
	SBC $A8
	SEC
	SBC #$01
	STA $8F
@Loop4:
	LDA $8F
	STA $8E
	LDX #$00
@Loop5:
	LDA $03A1,X
	SEC
	SBC $03A5,X
	TAY
	LDA $03A2,X
	SBC $03A6,X
	STA $45
	BNE @Loop6
	TYA
	BNE @Loop6
	LDA #$FF
	STA $03A3,X
	JMP @Loop7
@Loop6:
	LDA $E1
	ROR
	ROR
	EOR $45
	BPL @Loop7
	JSR L_17_B6EF
	JSR L_17_B6EF
	JSR L_17_B6EF
	JSR L_17_B6EF
	JMP @Loop8
@Loop7:
	INX
	INX
	INX
	INX
@Loop8:
	DEC $8E
	BNE @Loop5
	DEC $8F
	BNE @Loop4
	LDA $A9
	SEC
	SBC $A8
	TAY
	LDX #$00
@Loop9:
	LDA $039F,X
	BMI @Loop10
	STX $8E
@Loop10:
	LDA $8E
	LSR
	LSR
	CLC
	ADC #$01
	STA $039F,X
	INX
	INX
	INX
	INX
	DEY
	BNE @Loop9
	RTS

L_17_B6EF:
	LDA $039F,X
	LDY $03A3,X
	STA $03A3,X
	TYA
	STA $039F,X
	INX
	RTS

L_17_B6FE:
	LDA $A7
	SEC
	SBC $A8
	STA $91
	JSR L_17_A674
	LDA #$C1
	STA $94
	LDA #$20
	STA $95
	LDA #$00
	STA $93
@Loop1:
	LDA $91
	CLC
	ADC $A8
	CMP $A9
	BCC @Loop2
	JMP @Loop4
@Loop2:
	LDA $91
	ASL
	ASL
	TAX
	LDA $03A0,X
	STA $6E
	LDA $039F,X
	JSR L_D8B7
	LDA #$20
	JSR L_17_B148
	LDA $44
	JSR L_D5A0
	LDA $6E
	STA $45
	LDY #$20
	LDX #$00
	LDA $93
	ASL
	ASL
	ASL
	ASL
	CLC
	ADC #$30
	JSR L_17_A6BC
	LDA #$0A
	STA $45
	LDA #$25
	JSR L_17_B148
	LDA $6E
	CLC
	ADC #$40
	JSR L_CFA2
	LDA $E1
	BNE @Loop3
	JSR L_17_B7E2
	LDA #$30
	JSR L_17_B7C6
	JSR L_17_B7E8
	LDA #$35
	JSR L_17_B7C6
	JSR L_17_B7FC
	LDA #$3A
	JSR L_17_B7C6
	JMP @Loop5
@Loop3:
	JSR L_17_B835
	LDA #$30
	JSR L_17_B7C6
	JSR L_17_B851
	LDA #$35
	JSR L_17_B7C6
	JSR L_17_B86A
	LDA #$3A
	JSR L_17_B7C6
	JMP @Loop5
@Loop4:
	LDY $94
	LDX $95
	LDA #$02
	STA $3F
	LDA #$1E
	STA $3E
	JSR L_D09B
@Loop5:
	LDA $94
	CLC
	ADC #$40
	STA $94
	LDA $95
	ADC #$00
	STA $95
	INC $91
	INC $93
	LDA $93
	CMP #$0B
	BCS @Loop6
	JMP @Loop1
@Loop6:
	JSR L_17_A81E
	RTS

L_17_B7C6:
	PHA
	LDA $8E
	STA $44
	LDA $8F
	STA $45
	JSR L_D88A
	LDA $40
	STA $44
	LDA $41
	STA $45
	PLA
	JSR L_17_B148
	JSR L_D5DB
	RTS

L_17_B7E2:
	JSR L_17_B7E8
	JMP L_17_B802

L_17_B7E8:
	LDA #$00
	STA $8E
	STA $8F
	LDA #$00
	LDX #$04
	JSR L_17_B824
	LDA #$01
	LDX #$04
	JMP L_17_B824

L_17_B7FC:
	LDA #$00
	STA $8E
	STA $8F
L_17_B802:
	LDA #$00
	LDX #$06
	JSR L_17_B824
	LDA #$01
	LDX #$06
	JSR L_17_B824
	LDA #$02
	STA $90
@Loop1:
	LDA $90
	LDX #$12
	JSR L_17_B824
	INC $90
	LDA $90
	CMP #$0C
	BCC @Loop1
	RTS

L_17_B824:
	JSR L_C564
	LDA $8E
	CLC
	ADC $44
	STA $8E
	LDA $8F
	ADC $45
	STA $8F
	RTS

L_17_B835:
	JSR L_17_B851
	LDA $8E
	STA $44
	LDA $8F
	STA $45
	JSR L_17_B86A
	LDA $8E
	CLC
	ADC $44
	STA $8E
	LDA $8F
	ADC $45
	STA $8F
	RTS

L_17_B851:
	LDA $6E
	JSR L_DEDE
	LDY #$B9
	LDA ($3E),Y
	STA $8E
	INY
	LDA ($3E),Y
	STA $8F
	BPL @Loop1
	LDA #$00
	STA $8E
	STA $8F
@Loop1:
	RTS

L_17_B86A:
	LDA $6E
	JSR L_DEDE
	LDY #$BB
	LDA ($3E),Y
	STA $8E
	INY
	LDA ($3E),Y
	STA $8F
	BPL @Loop1
	LDA #$00
	STA $8E
	STA $8F
@Loop1:
	RTS

L_17_B883:
	LDA #$80
	STA PRG_RAM_PROTECT
	JSR L_DEC8
	LDA #$00
	STA $43
@Loop1:
	LDA $43
	JSR L_DE15
	LDA #$00
	ROR
	ORA $43
	LDX $43
	STA $9E,X
	INC $43
	LDA $43
	CMP #$0C
	BCC @Loop1
	LDA #$C0
	STA $41
	LDY #$00
	LDA #$00
	JSR L_17_B93D
	LDY #$01
	LDA #$02
	JSR L_17_B947
	LDY #$F6
	STA ($3E),Y
	LDA $6E
	CMP #HOUSTON
	BEQ @Loop2
	CMP #SAN_DIEGO
	BEQ @Loop2
	CMP #WASHINGTON
	BEQ @Loop2
	CMP #PHOENIX
	BEQ @Loop2
	CMP #DETROIT
	BEQ @Loop2
	CMP #ATLANTA
	BEQ @Loop2
	LDY #$01
	LDA #$03
	JSR L_17_B93D
	LDY #$0B
	LDA #$06
	JSR L_17_B947
	LDY #$F7
	STA ($3E),Y
	LDY #$0B
	LDA #$07
	JSR L_17_B93D
	JMP @Loop3
@Loop2:
	LDY #$01
	LDA #$03
	JSR L_17_B93D
	LDY #$15
	LDA #$06
	JSR L_17_B947
	LDY #$F7
	STA ($3E),Y
	LDY #$15
	LDA #$07
	JSR L_17_B93D
@Loop3:
	LDY #$1F
	LDA #$0A
	JSR L_17_B947
	LDY #$F8
	STA ($3E),Y
	LDA #$80
	STA $41
	LDX $6E
	LDA L_17_B9C3,X
	LSR
	LSR
	LSR
	LSR
	LDY #$29
	JSR L_17_B93D
	LDX $6E
	LDA L_17_B9C3,X
	AND #$0F
	LDY #$29
	JSR L_17_B947
	LDY #$F9
	STA ($3E),Y
	LDA #$C0
	STA PRG_RAM_PROTECT
	RTS

L_17_B93D:
	JSR L_17_B94D
	ASL
	ASL
	ASL
	ASL
	STA $40
	RTS

L_17_B947:
	JSR L_17_B94D
	ORA $40
	RTS

L_17_B94D:
	TAX
	LDA $9E,X
	BPL @Loop2
@Loop1:
	INY
	LDX L_17_B990-1,Y
	LDA $9E,X
	AND $41
	BNE @Loop1
@Loop2:
	LDA $9E,X
	ORA #$40
	STA $9E,X
	AND #$1F
	RTS

RANKINGS_POINTER_START:
; Y
	.BYTE $28
; LENGTH Y,X
	.BYTE $00,$02
; X
	.BYTE $78
RANKINGS_POINTER_MOVE:
	.BYTE $78, $A8, $D0
L_17_B96C:	.WORD $1C00, L_17_B7E2, $0E00, L_17_B7E2, $1C0E, L_17_B7E2, $1C00, L_17_B835, $0E00, L_17_B835, $1C0E, L_17_B835
L_17_B984:	.WORD L_17_B7E2, L_17_B7E8, L_17_B7FC, L_17_B835, L_17_B851, L_17_B86A
L_17_B990:
	.BYTE $01
	.BYTE $04, $05, $08, $09, $0B, $02, $03, $06, $07, $0A
	.BYTE $08, $09, $0B, $04, $05, $02, $03, $06, $07, $0A
	.BYTE $09, $0B, $04, $05, $08, $02, $03, $06, $07, $0A
	.BYTE $0B, $04, $05, $08, $09, $02, $03, $06, $07, $0A
	.BYTE $04, $05, $08, $09, $0B, $06, $07, $0A, $02, $03
L_17_B9C3:	.BYTE $59
	.BYTE $88
	.BYTE $49
	.BYTE $96
	.BYTE $88
	.BYTE $58
	.BYTE $37
	.BYTE $BB
	.BYTE $97
	.BYTE $66
	.BYTE $48
	.BYTE $88
	.BYTE $88
	.BYTE $55
	.BYTE $89
	.BYTE $33
	.BYTE $97
	.BYTE $55
	.BYTE $96
	.BYTE $55
	.BYTE $55
	.BYTE $89
	.BYTE $28
	.BYTE $89
	.BYTE $46
	.BYTE $46
	.BYTE $55
	.BYTE $57

NORMAL_MENU_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $00,$00,$28
; Length
	.BYTE $04
; Y Coordinates
	.BYTE $50, $60, $70, $80

PRESEASON_MENU_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $00,$00,$30
; Length
	.BYTE $06
; Y Coordinates
	.BYTE $60, $70, $80, $90, $A0, $B0

SEASON_MENU_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $00,$00,$68
; Length
	.BYTE $07
; Y Coordinates
	.BYTE $50, $60, $70, $80, $90, $A0, $B0

SCHEDULE_MENU_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $00,$00,$18
; Length
	.BYTE $03
; Y Coordinates
	.BYTE $30, $40, $50

SCHEDULE_RESET_MENU_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $00,$00,$68
; Length
	.BYTE $02
; Y Coordinates
	.BYTE $80, $90

SCHEDULE_RESET_VERIFY_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $00,$00,$B8
; Length
	.BYTE $02
; Y Coordinates
	.BYTE $A0, $B0

PRO_BOWL_MENU_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $00,$00,$30
; Length
	.BYTE $06
; Y Coordinates
	.BYTE $80, $90, $A0, $B0, $C0, $D0

TEAM_MENU_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $00,$00,$80
; Length
	.BYTE $04
; Y Coordinates
	.BYTE $50, $58, $60, $68

TEAM_PLAYER_SELECT1:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $00,$00,$38
; Length
	.BYTE $0B
; Y Coordinates
	.BYTE $88, $90, $98, $A0, $A8, $B0, $B8, $C0, $C8, $D0, $D8

TEAM_PLAYER_SELECT2:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $00,$00,$38
; Length
	.BYTE $08
; Y Coordinates
	.BYTE $88, $90, $98, $A0, $A8, $B0, $C8, $D8

TWO_BACK_STARTER_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $80,$00,$20
; Length
	.BYTE $09
; Y Coordinates
	.BYTE $50, $60, $70, $78, $88, $90, $A0, $C0, $D0

RUN_AND_SHOOT_STARTER_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $80,$00,$20
; Length
	.BYTE $09
; Y Coordinates
	.BYTE $50, $60, $70, $80, $88, $90, $98, $C0, $D0

THREE_WIDE_STARTER_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $80,$00,$20
; Length
	.BYTE $09
; Y Coordinates
	.BYTE $50, $60, $70, $80, $88, $90, $A0, $C0, $D0

STARTER_RESET_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $80,$00,$30
; Length
	.BYTE $02
; Y Coordinates
	.BYTE $70, $80

QB_RESERVE_SELECT:
; Y Coordinate
	.BYTE $60
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $80,$00,$98

TWO_BACK_RESERVE_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $80,$00,$98
; Length
	.BYTE $05
; Y Coordinates
	.BYTE $78, $80, $A0, $A8, $C8

RUN_AND_SHOOT_RESERVE_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $80,$00,$98
; Length
	.BYTE $05
; Y Coordinates
	.BYTE $78, $80, $88, $A0, $A8

THREE_WIDE_RESERVE_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $80,$00,$98
; Length
	.BYTE $05
; Y Coordinates
	.BYTE $78, $80, $88, $A0, $C8

TWO_BACK_RETURNER_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $80,$00,$20
; Length
	.BYTE $05
; Y Coordinates
	.BYTE $70, $78, $88, $90, $A0

THREE_WIDE_RETURNER_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $80,$00,$20
; Length
	.BYTE $05
; Y Coordinates
	.BYTE $70, $80, $88, $90, $A0

RUN_AND_SHOOT_RETURNER_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $80,$00,$20
; Length
	.BYTE $05
; Y Coordinates
	.BYTE $70, $80, $88, $90, $98

TWO_BACK_GAME_STARTER_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $80,$00,$20
; Length
	.BYTE $08
; Y Coordinates
	.BYTE $60, $70, $78, $88, $90, $A0, $C0, $D0

RUN_AND_SHOOT_GAME_STARTER_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $80,$00,$20
; Length
	.BYTE $08
; Y Coordinates
	.BYTE $60, $70, $80, $88, $90, $98, $C0, $D0

THREE_WIDE_GAME_STARTER_SELECT:
; Arrow Tile, Arrow Invert/Palette, X
	.BYTE $80,$00,$20
; Length
	.BYTE $08
; Y Coordinates
	.BYTE $60, $70, $80, $88, $90, $A0, $C0, $D0

STANDINGS_MENU_SELECT:
; Arrow Tile, Arrow Invert/Palette
	.BYTE $00,$00
; Length Y,X
	.BYTE $03,$03
; Arrow Destinations
	.BYTE $A0,$48
	.BYTE $A0,$78
	.BYTE $A0,$C0
	.BYTE $B0,$48
	.BYTE $B0,$78
	.BYTE $B0,$C0
	.BYTE $C0,$48
	.BYTE $FF,$FF
	.BYTE $FF,$FF

RANKINGS_MENU_SELECT:
; Arrow Tile, Arrow Invert/Palette
	.BYTE $00,$00
; Length Y,X
	.BYTE $02,$03
; Arrow Destinations
	.BYTE $B0,$70
	.BYTE $B0,$98
	.BYTE $B0,$C0
	.BYTE $D0,$70
	.BYTE $D0,$98
	.BYTE $D0,$C0

LEADERS_MENU_SELECT:
; Arrow Tile, Arrow Invert/Palette
	.BYTE $00,$00
; Length Y,X
	.BYTE $0C,$03
; Arrow Destinations
	.BYTE $30,$18
	.BYTE $30,$68
	.BYTE $30,$C0
	.BYTE $38,$18
	.BYTE $38,$68
	.BYTE $38,$C0
	.BYTE $40,$18
	.BYTE $40,$68
	.BYTE $40,$C0
	.BYTE $60,$18
	.BYTE $FF,$FF
	.BYTE $60,$C0
	.BYTE $68,$18
	.BYTE $FF,$FF
	.BYTE $68,$C0
	.BYTE $70,$18
	.BYTE $FF,$FF
	.BYTE $70,$C0
	.BYTE $90,$18
	.BYTE $FF,$FF
	.BYTE $90,$C0
	.BYTE $98,$18
	.BYTE $FF,$FF
	.BYTE $98,$C0
	.BYTE $A0,$18
	.BYTE $FF,$FF
	.BYTE $A0,$C0
	.BYTE $C0,$28
	.BYTE $FF,$FF
	.BYTE $C0,$98
	.BYTE $C8,$28
	.BYTE $FF,$FF
	.BYTE $C8,$98
	.BYTE $D0,$28
	.BYTE $FF,$FF
	.BYTE $D0,$98

TEAM_DATA_ARROW:
; Arrow Tile and Invert/Palette
	.BYTE $00,$02
; Length Y,X
	.BYTE $0C,$03
; Arrow Destinations
	.BYTE $20,$20
	.BYTE $FF,$FF
	.BYTE $FF,$FF
	.BYTE $30,$20
	.BYTE $FF,$FF
	.BYTE $FF,$FF
	.BYTE $48,$20
	.BYTE $48,$70
	.BYTE $48,$C0
	.BYTE $58,$20
	.BYTE $58,$70
	.BYTE $58,$C0
	.BYTE $68,$20
	.BYTE $68,$70
	.BYTE $68,$C0
	.BYTE $78,$20
	.BYTE $78,$70
	.BYTE $78,$C0
	.BYTE $88,$20
	.BYTE $FF,$FF
	.BYTE $88,$C0
	.BYTE $98,$20
	.BYTE $98,$70
	.BYTE $FF,$FF
	.BYTE $A8,$20
	.BYTE $A8,$70
	.BYTE $A8,$C0
	.BYTE $B8,$20
	.BYTE $B8,$70
	.BYTE $B8,$C0
	.BYTE $C8,$20
	.BYTE $C8,$70
	.BYTE $C8,$C0
	.BYTE $D8,$20
	.BYTE $D8,$70
	.BYTE $D8,$C0

L_17_BB85:
	.BYTE $00
	.BYTE $00
	.BYTE $18
	.BYTE $1A
	.BYTE $00

L_17_BB8A:
	.BYTE $00
	.BYTE $00
	.BYTE $20
	.BYTE $22
	.BYTE $90
	.BYTE $20
	.BYTE $00
	.BYTE $20
	.BYTE $22
	.BYTE $00

L_17_BB94:
	.BYTE $00
	.BYTE $00
	.BYTE $20
	.BYTE $22
	.BYTE $20
	.BYTE $20
	.BYTE $00
	.BYTE $20
	.BYTE $22
	.BYTE $50
	.BYTE $00
	.BYTE $00
	.BYTE $20
	.BYTE $22
	.BYTE $00

L_17_BBA3:
	.BYTE $00
	.BYTE $00
	.BYTE $18
	.BYTE $2A
	.BYTE $48
	.BYTE $00
	.BYTE $00
	.BYTE $18
	.BYTE $1A
	.BYTE $30
	.BYTE $00
	.BYTE $00
	.BYTE $18
	.BYTE $2A
	.BYTE $40
	.BYTE $00
	.BYTE $00
	.BYTE $18
	.BYTE $1A

MINI_HELMETS:
	.BYTE $94,$95,$96,$8B,$00
	.BYTE $88,$89,$8A,$8B,$00
	.BYTE $C0,$C1,$AB,$83,$07
	.BYTE $90,$99,$9A,$9B,$00
	.BYTE $BC,$BD,$97,$8B,$3B
	.BYTE $A8,$A9,$AA,$8B,$01
	.BYTE $CC,$CD,$CE,$00,$09
	.BYTE $98,$99,$9A,$9B,$00
	.BYTE $8F,$89,$8A,$8B,$0D
	.BYTE $9E,$9F,$A2,$8B,$00
	.BYTE $9C,$9D,$97,$8B,$00
	.BYTE $B0,$B1,$B2,$9B,$01
	.BYTE $BA,$BB,$82,$83,$02
	.BYTE $86,$87,$82,$83,$10
	.BYTE $93,$A1,$A2,$8B,$16
	.BYTE $A0,$A1,$A2,$8B,$00
	.BYTE $BE,$BF,$97,$00,$1B
	.BYTE $8C,$8D,$8E,$83,$1C
	.BYTE $80,$81,$82,$83,$00
	.BYTE $8F,$89,$8A,$8B,$21
	.BYTE $84,$85,$82,$83,$00
	.BYTE $A3,$A7,$B7,$9B,$27
	.BYTE $D2,$D3,$00,$00,$2A
	.BYTE $AE,$AF,$B3,$83,$2D
	.BYTE $A4,$A5,$A6,$83,$30
	.BYTE $B4,$B5,$B6,$83,$02
	.BYTE $AC,$AD,$A2,$8B,$31
	.BYTE $8F,$89,$8A,$8B,$35

MINI_HELMET_SPECIAL_SIZE:
	.BYTE <MHS_1-$51, <MHS_2-$51, <MHS_3-$51, <MHS_4-$51, <MHS_5-$51
	.BYTE <MHS_6-$51, <MHS_7-$51, <MHS_8-$51, <MHS_9-$51, <MHS_A-$51
	.BYTE <MHS_B-$51, <MHS_C-$51, <MHS_D-$51, <MHS_E-$51, <MHS_F-$51

MINI_HELMET_SPECIAL:
; Y,TILE,PALETTE/LAY,X
MHS_1:	.BYTE $00,$C7,$01,$00
MHS_2:	.BYTE $00,$B9,$03,$00, $00,$A1,$03,$08, $08,$A2,$03,$00, $08,$8B,$03,$08
MHS_3:	.BYTE $01,$D0,$02,$FC, $00,$D1,$02,$04
MHS_4:	.BYTE $00,$C2,$00,$00
MHS_5:	.BYTE $00,$CB,$21,$00, $00,$C9,$21,$08, $08,$CA,$21,$00
MHS_6:	.BYTE $00,$C3,$00,$06, $08,$CF,$00,$00, $08,$9B,$00,$08
MHS_7:	.BYTE $00,$C6,$01,$00
MHS_8:	.BYTE $00,$C4,$01,$00
MHS_9:	.BYTE $00,$C8,$22,$00, $00,$C9,$22,$08, $08,$CA,$22,$00
MHS_A:	.BYTE $00,$8F,$20,$00, $00,$89,$20,$08, $08,$8A,$20,$00, $08,$8B,$20,$08
MHS_B:	.BYTE $00,$C8,$23,$00, $00,$C9,$23,$08, $08,$CA,$23,$00
MHS_C:	.BYTE $00,$C8,$22,$00, $00,$C9,$22,$08, $08,$CA,$22,$00
MHS_D:	.BYTE $00,$C5,$03,$01
MHS_E:	.BYTE $00,$FC,$01,$00, $00,$FD,$01,$08, $08,$FE,$01,$00, $08,$FF,$01,$08
MHS_F:

MINI_HELMETS_TEAM_CONTROL:
; Team Control Mini-Helmet Y,X Coordinates
	.BYTE $30,$08
	.BYTE $40,$08
	.BYTE $50,$08
	.BYTE $60,$08
	.BYTE $70,$08
	.BYTE $30,$30
	.BYTE $40,$30
	.BYTE $50,$30
	.BYTE $60,$30
	.BYTE $30,$58
	.BYTE $40,$58
	.BYTE $50,$58
	.BYTE $60,$58
	.BYTE $70,$58
	.BYTE $90,$08
	.BYTE $A0,$08
	.BYTE $B0,$08
	.BYTE $C0,$08
	.BYTE $D0,$08
	.BYTE $90,$30
	.BYTE $A0,$30
	.BYTE $B0,$30
	.BYTE $C0,$30
	.BYTE $D0,$30
	.BYTE $90,$58
	.BYTE $A0,$58
	.BYTE $B0,$58
	.BYTE $C0,$58

MINI_HELMETS_TEAM_DATA:
; Team Data Mini-Helmet Y,X Coordinates
	.BYTE $40,$08
	.BYTE $50,$08
	.BYTE $60,$08
	.BYTE $70,$08
	.BYTE $80,$08
	.BYTE $40,$30
	.BYTE $50,$30
	.BYTE $60,$30
	.BYTE $70,$30
	.BYTE $40,$58
	.BYTE $50,$58
	.BYTE $60,$58
	.BYTE $70,$58
	.BYTE $80,$58
	.BYTE $90,$08
	.BYTE $A0,$08
	.BYTE $B0,$08
	.BYTE $C0,$08
	.BYTE $D0,$08
	.BYTE $90,$30
	.BYTE $A0,$30
	.BYTE $B0,$30
	.BYTE $C0,$30
	.BYTE $D0,$30
	.BYTE $A0,$58
	.BYTE $B0,$58
	.BYTE $C0,$58
	.BYTE $D0,$58

	.BYTE $0F,$25,$0F,$30, $0F,$0F,$0F,$29, $0F,$0F,$0F,$0F, $0F,$0F,$0F,$0F
	.BYTE $0F,$0F,$0F,$0F, $0F,$0F,$0F,$0F, $0F,$0F,$0F,$30, $0F,$0F,$0F,$25

HELMET_COLORS:
	.BYTE $30,$16,$12,$10,$30,$30,$12,$26
	.BYTE $12,$30,$12,$10,$30,$12,$00,$00
	.BYTE $2C,$30,$26,$1C,$2C,$2C,$26,$00
	.BYTE $25,$30,$12,$15,$25,$12,$25,$00
	.BYTE $2B,$1B,$0B,$0F,$00,$30,$00,$00
	.BYTE $26,$16,$0F,$0F,$00,$26,$00,$30
	.BYTE $02,$26,$30,$10,$30,$36,$30,$00
	.BYTE $25,$30,$21,$15,$25,$25,$21,$00
	.BYTE $12,$02,$18,$02,$12,$28,$30,$25
	.BYTE $30,$12,$15,$10,$30,$22,$15,$30
	.BYTE $26,$16,$06,$10,$30,$0F,$30,$00
	.BYTE $32,$10,$00,$00,$10,$10,$30,$0F
	.BYTE $22,$12,$02,$12,$22,$28,$30,$00
	.BYTE $30,$31,$10,$11,$21,$11,$30,$2A
	.BYTE $30,$15,$18,$18,$28,$0F,$30,$27
	.BYTE $15,$12,$05,$10,$30,$22,$00,$30
	.BYTE $2B,$1B,$0B,$10,$30,$32,$30,$31
	.BYTE $30,$30,$10,$10,$31,$06,$0F,$28
	.BYTE $12,$31,$30,$00,$31,$12,$30,$22
	.BYTE $12,$02,$01,$02,$12,$15,$30,$22
	.BYTE $11,$10,$30,$11,$21,$32,$30,$11
	.BYTE $0B,$28,$30,$0B,$1B,$0B,$1B,$30
	.BYTE $23,$13,$03,$03,$13,$28,$30,$23
	.BYTE $15,$30,$26,$15,$26,$15,$26,$00
	.BYTE $15,$27,$30,$10,$30,$0F,$30,$15
	.BYTE $28,$03,$13,$03,$13,$13,$38,$23
	.BYTE $0F,$18,$30,$0F,$00,$0F,$30,$28
	.BYTE $12,$02,$01,$02,$12,$22,$30,$12

HELMET_SHELLS:
	.BYTE $40, $40, $40, $40, $41, $43, $40, $40, $41, $40, $41, $41, $41, $41
	.BYTE $40, $40, $41, $40, $40, $41, $40, $40, $41, $40, $40, $42, $40, $40

HELMET_DECALS:
	.BYTE $3E, $3D, $3F, $40, $31, $32, $33, $34, $35, $36, $37, $41, $42, $3A
	.BYTE $45, $3C, $43, $44, $3B, $46, $47, $48, $49, $4A, $4E, $4C, $4D, $4B

TEAM_SELECT_ARROW:
; Arrow Left and Invert/Palette
	.BYTE $27,$02
; Y,X
	.BYTE $0A,$03
; Arrow Destinations
	.BYTE $38,$18
	.BYTE $38,$68
	.BYTE $38,$B8
	.BYTE $48,$18
	.BYTE $48,$68
	.BYTE $48,$B8
	.BYTE $58,$18
	.BYTE $58,$68
	.BYTE $58,$B8
	.BYTE $68,$18
	.BYTE $68,$68
	.BYTE $68,$B8
	.BYTE $78,$18
	.BYTE $FF,$FF
	.BYTE $78,$B8
	.BYTE $98,$18
	.BYTE $98,$68
	.BYTE $98,$B8
	.BYTE $A8,$18
	.BYTE $A8,$68
	.BYTE $A8,$B8
	.BYTE $B8,$18
	.BYTE $B8,$68
	.BYTE $B8,$B8
	.BYTE $C8,$18
	.BYTE $C8,$68
	.BYTE $C8,$B8
	.BYTE $D8,$18
	.BYTE $D8,$68
	.BYTE $FF,$FF

L_17_BEC1:
	.BYTE $48
	.BYTE $2C
	.BYTE $02
	.BYTE $18
	.BYTE $48
	.BYTE $2D
	.BYTE $02
	.BYTE $20

NFL_SHIELD:
	.BYTE $80,$00,$80,$00,$00,$18,$00,$19,$80,$00,$80,$00,$80,$00
	.BYTE $00,$1A,$00,$1B,$02,$46,$02,$47,$00,$1E,$00,$1F,$80,$00
	.BYTE $00,$1C,$00,$49,$00,$4C,$00,$4D,$00,$58,$00,$0C,$00,$14
	.BYTE $00,$1D,$00,$4B,$00,$4E,$00,$4F,$00,$4B,$00,$73,$00,$15
	.BYTE $00,$0E,$01,$60,$01,$61,$01,$64,$01,$65,$00,$5A,$00,$15
	.BYTE $00,$0E,$01,$62,$01,$63,$01,$66,$01,$67,$00,$5A,$00,$15
	.BYTE $00,$0E,$01,$51,$01,$63,$01,$54,$01,$55,$00,$5A,$00,$15
	.BYTE $00,$0F,$01,$56,$01,$57,$01,$59,$01,$5C,$00,$5D,$00,$15
	.BYTE $80,$00,$00,$0D,$00,$76,$00,$77,$00,$71,$00,$13,$00,$16
	.BYTE $80,$00,$80,$00,$00,$17,$00,$10,$00,$11,$00,$12,$80,$00

PLAYBOOK_FLASH_CONTROLLER:
	.BYTE $50,$51,$54,$55
	.BYTE $52,$53,$BA,$BB

DIVISIONS_LIST:
; First Division Team # and # of Teams
	.BYTE BUFFALO, $05
	.BYTE CINCINNATI, $04
	.BYTE DENVER, $05
	.BYTE WASHINGTON, $05
	.BYTE CHICAGO, $05
	.BYTE SAN_FRANCISCO, $04

PLAYOFF_HELMETS:
; Playoff Team and Y Coordinate
	.BYTE $10, $30
	.BYTE $00, $50
	.BYTE $01, $70
	.BYTE $09, $90
	.BYTE $08, $B0
	.BYTE $18, $D0
	.BYTE $14, $30
	.BYTE $04, $50
	.BYTE $05, $70
	.BYTE $0D, $90
	.BYTE $0C, $B0
	.BYTE $1C, $D0

PLAYOFF_HELMET_WINNERS:
; Playoff Game, Helmet Y, X Coordinates, AFC/NFC
	.BYTE $00, $60, $90, $00
	.BYTE $04, $60, $60, $01
	.BYTE $08, $A0, $90, $00
	.BYTE $0C, $A0, $60, $01
	.BYTE $10, $50, $B0, $00
	.BYTE $14, $50, $40, $01
	.BYTE $18, $C0, $B0, $00
	.BYTE $1C, $C0, $40, $01
	.BYTE $20, $80, $D0, $00
	.BYTE $24, $80, $20, $01
	.BYTE $FF

L_17_BFAA:
	.BYTE $00, $A0, $50, $00
	.BYTE $00
	.BYTE $01

L_17_BFB0:
	.BYTE $50, $00, $01, $80

PLAY_SELECT_ARROWS:
	.BYTE $B0, $94, $01, $58
	.BYTE $B0, $95, $01, $60
	.BYTE $B8, $9D, $01, $58
	.BYTE $B8, $97, $01, $60
	.BYTE $B0, $9F, $01, $98
	.BYTE $B0, $B5, $01, $A0
	.BYTE $B8, $BD, $01, $98
	.BYTE $B8, $B7, $01, $A0
